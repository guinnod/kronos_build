/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/config/database.js":
/*!********************************!*\
  !*** ./src/config/database.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  dialect: \"sqlite\",\n  storage: \"./database.db\",\n  logging: false\n});\n\n//# sourceURL=webpack://kronos/./src/config/database.js?");

/***/ }),

/***/ "./src/constants/index.js":
/*!********************************!*\
  !*** ./src/constants/index.js ***!
  \********************************/
/***/ ((module) => {

eval("const tcpOpenDoorCommandDefault = Buffer.from([0xFF, 0x00, 0x08, 0xD0, 0x06, 0x02, 0x00, 0x14, 0x00, 0x14, 0x00, 0x08]);\nconst tcpBuzzerCommand = Buffer.from([0xFF, 0x00, 0x08, 0xD0, 0x02, 0x03, 0x00, 0x0A, 0x00, 0x0A, 0x00, 0xF1]);\nconst tcpInitialCommand = Buffer.from([0x55, 0xAA, 0x55, 0x00, 0x25, 0x80, 0x03, 0xA8]);\nconst tcpOpenDoorCommand3s = Buffer.from([0xFF, 0x00, 0x08, 0xD0, 0x05, 0x02, 0x01, 0x2C, 0x00, 0x0A, 0x01, 0x17]);\nconst tcpOpenDoorCommand5s = Buffer.from([0xFF, 0x00, 0x08, 0xD0, 0x05, 0x02, 0x01, 0xF4, 0x00, 0x0A, 0x01, 0xDF]);\nconst tcpOpenDoorCommand8s = Buffer.from([0xFF, 0x00, 0x08, 0xD0, 0x05, 0x02, 0x03, 0x20, 0x00, 0x0A, 0x01, 0x0D]);\nconst tcpBuzzerCommand2 = Buffer.from([0xFF, 0x00, 0x08, 0xD0, 0x0C, 0x02, 0x00, 0xC8, 0x00, 0x0A, 0x00, 0xB8]);\nconst newInitialCommand = Buffer.from([0x55, 0xAA, 0x55, 0x00, 0x4B, 0x00, 0x03, 0x4E]);\nmodule.exports = {\n  tcpOpenDoorCommandDefault,\n  tcpBuzzerCommand,\n  tcpInitialCommand,\n  tcpOpenDoorCommand3s,\n  tcpOpenDoorCommand5s,\n  tcpOpenDoorCommand8s,\n  tcpBuzzerCommand2,\n  newInitialCommand\n};\n\n//# sourceURL=webpack://kronos/./src/constants/index.js?");

/***/ }),

/***/ "./src/controllers/auth.controller.js":
/*!********************************************!*\
  !*** ./src/controllers/auth.controller.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _models_Admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/Admin */ \"./src/models/Admin.js\");\n/* harmony import */ var _services_jwt_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/jwt.service */ \"./src/services/jwt.service.js\");\n/* harmony import */ var _utils_ApiError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/ApiError */ \"./src/utils/ApiError.js\");\n\n\n\nconst controller = {\n  login: async (req, res, next) => {\n    try {\n      const {\n        login,\n        password\n      } = req.body;\n      const _admin = await _models_Admin__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n        where: {\n          login: login\n        },\n        attributes: ['id', 'name', 'login', 'password_hash']\n      });\n      if (!(await _admin.checkPassword(password))) throw new _utils_ApiError__WEBPACK_IMPORTED_MODULE_2__.UnauthorizedError();\n      const admin = {\n        id: _admin.id,\n        name: _admin.name,\n        login: _admin.login\n      };\n      const accessToken = _services_jwt_service__WEBPACK_IMPORTED_MODULE_1__[\"default\"].jwtSignToken({\n        user_id: admin.id,\n        name: admin.name\n      }, '10m');\n      const refreshToken = _services_jwt_service__WEBPACK_IMPORTED_MODULE_1__[\"default\"].jwtSignToken({\n        user_id: admin.id,\n        name: admin.name\n      }, '1d');\n      res.status(200).json({\n        status: true,\n        message: 'Successfully logged in',\n        data: {\n          admin,\n          accessToken,\n          refreshToken\n        }\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  refresh: async (req, res, next) => {\n    try {\n      const {\n        refreshToken: token\n      } = req.body;\n      const decoded = _services_jwt_service__WEBPACK_IMPORTED_MODULE_1__[\"default\"].jwtVerifyToken(token);\n      const admin = await _models_Admin__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(decoded.user_id, {\n        attributes: ['id', 'name', 'login']\n      });\n      if (!decoded) {\n        throw new _utils_ApiError__WEBPACK_IMPORTED_MODULE_2__.BadRequestError();\n      }\n      const accessToken = _services_jwt_service__WEBPACK_IMPORTED_MODULE_1__[\"default\"].jwtSignToken({\n        user_id: admin.id,\n        name: admin.name\n      }, '10m');\n      const refreshToken = _services_jwt_service__WEBPACK_IMPORTED_MODULE_1__[\"default\"].jwtSignToken({\n        user_id: admin.id,\n        name: admin.name\n      }, '1d');\n      res.status(200).json({\n        status: true,\n        message: 'Successfully refreshed tokens',\n        data: {\n          admin,\n          accessToken,\n          refreshToken\n        }\n      });\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // create: async(req, res, next) =>{\n  //     try {\n  //         const {name, login, password} = req.body;\n\n  //         const admin = await Admin.create({name, login, password})\n\n  //         res.status(200).json({ status: true, message: 'Successfully created admin user', data: admin });\n  //     } catch (error) {\n  //         next(error);\n  //     }\n  // },\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (controller);\n\n//# sourceURL=webpack://kronos/./src/controllers/auth.controller.js?");

/***/ }),

/***/ "./src/controllers/cards.controller.js":
/*!*********************************************!*\
  !*** ./src/controllers/cards.controller.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _models_Card__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/Card */ \"./src/models/Card.js\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst controller = {\n  create_card: async (req, res, next) => {\n    try {\n      const values = {\n        label: req.body.label,\n        card_uid: req.body.card_uid\n      };\n      const existingCard = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n        where: {\n          card_uid: values.card_uid\n        },\n        paranoid: false\n      });\n      if (existingCard) {\n        if (existingCard.deletedAt) {\n          return res.status(409).json({\n            status: false,\n            message: 'Card with this card_uid already exists (deleted)',\n            data: null\n          });\n        }\n        return res.status(409).json({\n          status: false,\n          message: 'Card with this card_uid already exists',\n          data: null\n        });\n      }\n      const card = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(values);\n      res.status(201).json({\n        status: true,\n        message: 'Card created successfully',\n        data: card\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  get_card: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const card = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id, {\n        paranoid: false\n      });\n      if (!card) {\n        return res.status(404).json({\n          status: false,\n          message: 'Card not found',\n          data: null\n        });\n      }\n      res.status(200).json({\n        status: true,\n        message: 'Card retrieved successfully',\n        data: card\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  get_cards: async (req, res, next) => {\n    try {\n      const cards = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findAll({\n        paranoid: false,\n        ...req.paginationOptions\n      });\n      res.status(200).json({\n        status: true,\n        message: 'Cards retrieved successfully',\n        data: cards,\n        pagination: req.paginationInfo\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  update_card: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const {\n        label,\n        card_uid\n      } = req.body;\n      const card = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id);\n      if (!card) {\n        return res.status(404).json({\n          status: false,\n          message: 'Card not found',\n          data: null\n        });\n      }\n      await card.update({\n        label,\n        card_uid\n      });\n      res.status(200).json({\n        status: true,\n        message: 'Card updated successfully',\n        data: card\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  delete_card: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const card = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id);\n      if (!card) {\n        return res.status(404).json({\n          status: false,\n          message: 'Card not found',\n          data: null\n        });\n      }\n      await card.destroy();\n      res.status(200).json({\n        status: true,\n        message: 'Card deleted successfully',\n        data: null\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  restore_card: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const card = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id, {\n        paranoid: false\n      });\n      if (!card) {\n        return res.status(404).json({\n          status: false,\n          message: 'Card not found',\n          data: null\n        });\n      }\n      await card.restore();\n      res.status(200).json({\n        status: true,\n        message: 'Card restored successfully',\n        data: card\n      });\n    } catch (error) {\n      console.error(\"Error restoring Card:\", error);\n      next(error);\n    }\n  },\n  get_unassociated_cards: async (req, res, next) => {\n    try {\n      const unassociatedCards = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findAll({\n        where: {\n          // Leverage Sequelize subquery to check for unassociated cards\n          card_uid: {\n            [(sequelize__WEBPACK_IMPORTED_MODULE_1___default().Op).notIn]: [sequelize__WEBPACK_IMPORTED_MODULE_1___default().literal(`(SELECT card_uid FROM users WHERE deletedAt IS NULL)`)]\n          }\n        }\n      });\n      res.status(200).json({\n        status: true,\n        message: 'Unassociated cards retrieved successfully',\n        data: unassociatedCards\n      });\n    } catch (error) {\n      next(error);\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (controller);\n\n//# sourceURL=webpack://kronos/./src/controllers/cards.controller.js?");

/***/ }),

/***/ "./src/controllers/history.controller.js":
/*!***********************************************!*\
  !*** ./src/controllers/history.controller.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _models_History_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/History.js */ \"./src/models/History.js\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst controller = {\n  get_history: async (req, res, next) => {\n    try {\n      const {\n        startDate,\n        endDate,\n        cardLabel,\n        cardUid,\n        rfidLabel,\n        ipAddress,\n        mode,\n        direction,\n        attendance,\n        name,\n        lastName,\n        middleName,\n        phoneNumber,\n        email,\n        printPass\n      } = req.query;\n      const page = (0,lodash__WEBPACK_IMPORTED_MODULE_2__.parseInt)(req.query.page) || 1;\n      const limit = (0,lodash__WEBPACK_IMPORTED_MODULE_2__.parseInt)(req.query.limit) || 25;\n      const filters = {};\n      if (startDate && endDate) {\n        filters['date'] = {\n          [(sequelize__WEBPACK_IMPORTED_MODULE_1___default().Op).between]: [startDate, endDate]\n        };\n      }\n      if (cardLabel) {\n        filters['card_label'] = {\n          [(sequelize__WEBPACK_IMPORTED_MODULE_1___default().Op).like]: `%${cardLabel}%` // Use LIKE for partial matches\n        };\n      }\n      if (cardUid) {\n        filters['card_uid'] = cardUid;\n      }\n      if (rfidLabel) {\n        filters['rfid_label'] = {\n          [(sequelize__WEBPACK_IMPORTED_MODULE_1___default().Op).like]: `%${rfidLabel}%` // Use LIKE for partial matches\n        };\n      }\n      if (ipAddress) {\n        filters['ip_address'] = ipAddress;\n      }\n      if (mode) {\n        filters['mode'] = mode;\n      }\n      if (direction) {\n        filters['direction'] = direction;\n      }\n      if (attendance) {\n        let att;\n        if (attendance === 'true') {\n          att = 1;\n        } else if (attendance === 'false') {\n          att = 0;\n        }\n        filters['attendance'] = att;\n      }\n      if (name) {\n        filters['name'] = {\n          [(sequelize__WEBPACK_IMPORTED_MODULE_1___default().Op).like]: `%${name}%` // Use LIKE for partial matches\n        };\n      }\n      if (lastName) {\n        filters['last_name'] = {\n          [(sequelize__WEBPACK_IMPORTED_MODULE_1___default().Op).like]: `%${lastName}%` // Use LIKE for partial matches\n        };\n      }\n      if (middleName) {\n        filters['middle_name'] = {\n          [(sequelize__WEBPACK_IMPORTED_MODULE_1___default().Op).like]: `%${middleName}%` // Use LIKE for partial matches\n        };\n      }\n      if (phoneNumber) {\n        filters['phone_number'] = phoneNumber;\n      }\n      if (email) {\n        filters['email'] = email;\n      }\n      if (printPass) {\n        filters['print_pass'] = printPass;\n      }\n      const [entries, count] = await Promise.all([_models_History_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findAll({\n        where: filters,\n        limit: limit,\n        offset: (page - 1) * limit\n      }), _models_History_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].count({\n        where: filters\n      })]);\n      const totalPages = Math.ceil(count / limit);\n      const nextPage = page < totalPages ? page + 1 : null;\n      const previousPage = page > 1 ? page - 1 : null;\n      const paginationInfo = {\n        current_page: page,\n        total_pages: totalPages,\n        next_page: nextPage,\n        previous_page: previousPage\n      };\n      const formattedData = entries.map(entry => ({\n        id: entry.id,\n        date: entry.date,\n        time: entry.time,\n        entered: entry.entered,\n        Card: entry ? {\n          card_uid: entry.card_uid,\n          label: entry.card_label\n        } : null,\n        Rfid: entry ? {\n          ip_address: entry.ip_address,\n          label: entry.rfid_label,\n          mode: entry.mode,\n          direction: entry.direction,\n          attendance: entry.attendance\n        } : null,\n        User: entry ? {\n          name: entry.name,\n          last_name: entry.last_name,\n          middle_name: entry.middle_name,\n          phone_number: entry.phone_number,\n          email: entry.email,\n          print_pass: entry.print_pass\n        } : null\n      }));\n      return res.status(200).json({\n        data: formattedData,\n        pagination: paginationInfo\n      });\n    } catch (error) {\n      console.error(\"Error finding History:\", error);\n      next(error);\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (controller);\n\n//# sourceURL=webpack://kronos/./src/controllers/history.controller.js?");

/***/ }),

/***/ "./src/controllers/policies.controller.js":
/*!************************************************!*\
  !*** ./src/controllers/policies.controller.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _models_Policy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/Policy */ \"./src/models/Policy.js\");\n/* harmony import */ var _models_Rfid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/Rfid */ \"./src/models/Rfid.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models */ \"./src/models/index.js\");\n\n\n\nconst controller = {\n  create_policy: async (req, res, next) => {\n    try {\n      const {\n        label,\n        rfids\n      } = req.body;\n      const existingPolicy = await _models_Policy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n        where: {\n          label: label\n        },\n        paranoid: false\n      });\n      if (existingPolicy) {\n        if (existingPolicy.deletedAt) {\n          return res.status(409).json({\n            status: false,\n            message: 'Policy with this label already exists (deleted)',\n            data: null\n          });\n        }\n        return res.status(409).json({\n          status: false,\n          message: 'Policy with this label already exists',\n          data: null\n        });\n      }\n      const policy = await _models_Policy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        label\n      });\n\n      // array of rfid ids\n      if (rfids && rfids.length > 0) {\n        await policy.setRfids([]);\n        await policy.setRfids(rfids);\n      }\n      res.status(201).json({\n        status: true,\n        message: 'Policy created successfully',\n        data: policy\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  get_policy: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const policy = await _models_Policy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id, {\n        include: [{\n          model: _models_Rfid__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          as: 'rfids',\n          through: {\n            attributes: []\n          },\n          attributes: ['id', 'ipAddress', 'label', 'mode']\n        }]\n      });\n      if (!policy) {\n        return res.status(404).json({\n          status: false,\n          message: 'Policy not found',\n          data: null\n        });\n      }\n      res.status(200).json({\n        status: true,\n        message: 'Policy retrieved successfully',\n        data: policy\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  get_policies: async (req, res, next) => {\n    try {\n      const policies = await _models_Policy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findAll({\n        include: [{\n          model: _models_Rfid__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          as: 'rfids',\n          through: {\n            attributes: []\n          },\n          attributes: ['id', 'ipAddress', 'label', 'mode']\n        }],\n        ...req.paginationOptions\n      });\n      res.status(200).json({\n        status: true,\n        message: 'Policies retrieved successfully',\n        data: policies,\n        pagination: req.paginationInfo\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  update_policy: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const {\n        label,\n        rfids\n      } = req.body;\n      const policy = await _models_Policy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id);\n      if (!policy) {\n        return res.status(404).json({\n          status: false,\n          message: 'Policy not found',\n          data: null\n        });\n      }\n      await policy.update({\n        label\n      });\n      if (rfids && rfids.length > 0) {\n        await policy.setRfids([]);\n        await policy.setRfids(rfids);\n      }\n      res.status(200).json({\n        status: true,\n        message: 'Policy updated successfully',\n        data: policy\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  delete_policy: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      await _models__WEBPACK_IMPORTED_MODULE_2__.PolicyRfid.destroy({\n        where: {\n          policy_id: id\n        }\n      });\n      await _models__WEBPACK_IMPORTED_MODULE_2__.RolePolicy.destroy({\n        where: {\n          policy_id: id\n        }\n      });\n      const policy = await _models_Policy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id);\n      if (!policy) {\n        return res.status(404).json({\n          status: false,\n          message: 'Policy not found',\n          data: null\n        });\n      }\n      await policy.destroy();\n      res.status(200).json({\n        status: true,\n        message: 'Policy deleted successfully',\n        data: null\n      });\n    } catch (error) {\n      next(error);\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (controller);\n\n//# sourceURL=webpack://kronos/./src/controllers/policies.controller.js?");

/***/ }),

/***/ "./src/controllers/reader.controller.js":
/*!**********************************************!*\
  !*** ./src/controllers/reader.controller.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _models_Rfid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/Rfid.js */ \"./src/models/Rfid.js\");\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! yup */ \"yup\");\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models */ \"./src/models/index.js\");\n\n\n\nconst controller = {\n  get_rfids: async (req, res, next) => {\n    try {\n      const allRfid = await _models_Rfid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findAll(req.paginationOptions);\n      return res.status(200).json({\n        data: allRfid,\n        pagination: req.paginationInfo\n      });\n    } catch (error) {\n      console.error(\"Error finding Rfids:\", error);\n      next(error);\n    }\n  },\n  get_rfid: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const rfidByID = await _models_Rfid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id);\n      if (!rfidByID) {\n        return res.status(404).json({\n          message: \"RFID with that ID not found\"\n        });\n      }\n      return res.status(200).json({\n        data: rfidByID\n      });\n    } catch (error) {\n      console.error(\"Error finding Rfid by ID:\", error);\n      next(error);\n    }\n  },\n  create_rfid: async (req, res, next) => {\n    try {\n      const {\n        ipAddress,\n        label,\n        mode,\n        direction,\n        attendance,\n        duration\n      } = req.body;\n      const values = {\n        ipAddress: req.body.ipAddress,\n        label: req.body.label,\n        mode: req.body.mode\n      };\n      const schema = yup__WEBPACK_IMPORTED_MODULE_1__.object().shape({\n        ipAddress: yup__WEBPACK_IMPORTED_MODULE_1__.string().required(),\n        label: yup__WEBPACK_IMPORTED_MODULE_1__.string().required(),\n        mode: yup__WEBPACK_IMPORTED_MODULE_1__.string().required()\n      });\n      if (!(await schema.isValid(values))) {\n        return res.status(400).json({\n          message: \"Missing required fields!\"\n        });\n      }\n      const existingRfid = await _models_Rfid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n        where: {\n          ipAddress\n        },\n        paranoid: false\n      });\n      if (existingRfid) {\n        if (existingRfid.deletedAt) {\n          return res.status(409).json({\n            status: false,\n            message: 'Rfid with this ip address already exists (deleted)',\n            data: null\n          });\n        }\n        return res.status(409).json({\n          status: false,\n          message: 'Rfid with this ip address already exists',\n          data: null\n        });\n      }\n\n      // Create new record if none found\n      const newRfid = await _models_Rfid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        ipAddress,\n        label,\n        mode,\n        direction,\n        attendance,\n        duration\n      });\n      return res.status(201).json({\n        status: \"RFID Reader created successfully!\",\n        data: newRfid\n      });\n    } catch (error) {\n      console.error(\"Error creating/restoring Rfid:\", error);\n      next(error);\n    }\n  },\n  update_rfid: async (req, res, next) => {\n    try {\n      const rfidId = req.params.id;\n      const {\n        ipAddress,\n        label,\n        mode,\n        ...optionalFields\n      } = req.body;\n      if (!ipAddress || !label) {\n        return res.status(400).json({\n          message: \"Missing required fields!\"\n        });\n      }\n      const rfidToUpdate = await _models_Rfid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(rfidId);\n      const updateData = Object.fromEntries(Object.entries(optionalFields).filter(([key, value]) => value !== null));\n      rfidToUpdate.set({\n        ipAddress,\n        label,\n        mode,\n        ...updateData\n      });\n      await rfidToUpdate.save();\n      return res.status(200).json({\n        status: \"Updated successfully!\",\n        data: rfidToUpdate\n      });\n    } catch (error) {\n      console.error(\"Error updating Rfid:\", error);\n      next(error);\n    }\n  },\n  delete_rfid: async (req, res, next) => {\n    try {\n      await _models__WEBPACK_IMPORTED_MODULE_2__.PolicyRfid.destroy({\n        where: {\n          rfid_id: req.params.id\n        }\n      });\n      await _models__WEBPACK_IMPORTED_MODULE_2__.RoleRfidPermission.destroy({\n        where: {\n          rfid_id: req.params.id\n        }\n      });\n      const result = await _models_Rfid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].destroy({\n        where: {\n          id: req.params.id\n        },\n        force: false\n      });\n      if (result === 0) {\n        return res.status(404).json({\n          status: \"fail\",\n          message: \"RFID reader with the provided ID not found\"\n        });\n      }\n      return res.status(200).json({\n        status: \"RFID reader deleted successfully\"\n      });\n    } catch (error) {\n      console.error(\"Error deleting Rfid:\", error);\n      next(error);\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (controller);\n\n//# sourceURL=webpack://kronos/./src/controllers/reader.controller.js?");

/***/ }),

/***/ "./src/controllers/roles.controller.js":
/*!*********************************************!*\
  !*** ./src/controllers/roles.controller.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _services_sequelize_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/sequelize.service */ \"./src/services/sequelize.service.js\");\n/* harmony import */ var _models_Role__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/Role */ \"./src/models/Role.js\");\n/* harmony import */ var _models_Policy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/Policy */ \"./src/models/Policy.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models */ \"./src/models/index.js\");\n\n\n\n\nconst controller = {\n  create_role: async (req, res, next) => {\n    let t;\n    const {\n      label,\n      policies,\n      separate_access_rfids\n    } = req.body;\n    const existingRole = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findOne({\n      where: {\n        label: label\n      },\n      paranoid: false\n    });\n    if (existingRole) {\n      if (existingRole.deletedAt) {\n        return res.status(409).json({\n          status: false,\n          message: 'Role with this label already exists (deleted)',\n          data: null\n        });\n      }\n      return res.status(409).json({\n        status: false,\n        message: 'Role with this label already exists',\n        data: null\n      });\n    }\n    try {\n      t = await _services_sequelize_service__WEBPACK_IMPORTED_MODULE_0__[\"default\"].transaction();\n      const role = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n        label\n      }, {\n        transaction: t\n      });\n      if (policies && policies.length > 0) {\n        await role.setPolicies(policies, {\n          transaction: t\n        });\n      }\n      if (separate_access_rfids && separate_access_rfids.length > 0) {\n        await role.setSeparate_access_rfids(separate_access_rfids, {\n          transaction: t\n        });\n      }\n      await t.commit();\n      res.status(201).json({\n        status: true,\n        message: 'Role created successfully',\n        data: role\n      });\n    } catch (error) {\n      if (t && t.finished !== 'rollback' && t.finished !== 'commit') {\n        await t.rollback();\n      }\n      console.error(\"Error creating Role:\", error);\n      next(error);\n    }\n  },\n  get_role: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const role = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByPk(id, {\n        paranoid: false,\n        include: [{\n          model: _models_Policy__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          as: 'policies',\n          include: ['rfids']\n        }, 'separate_access_rfids']\n      });\n      if (!role) {\n        return res.status(404).json({\n          status: false,\n          message: \"Role with that ID not found\",\n          data: null\n        });\n      }\n      res.status(200).json({\n        status: true,\n        message: 'Role retrieved successfully',\n        data: role\n      });\n    } catch (error) {\n      console.error(\"Error finding Role by ID:\", error);\n      next(error);\n    }\n  },\n  get_roles: async (req, res, next) => {\n    try {\n      const roles = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findAll({\n        paranoid: false,\n        include: [{\n          model: _models_Policy__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          as: 'policies',\n          include: ['rfids']\n        }, 'separate_access_rfids'],\n        ...req.paginationOptions\n      });\n      res.status(200).json({\n        status: true,\n        message: 'Roles retrieved successfully',\n        data: roles,\n        pagination: req.paginationInfo\n      });\n    } catch (error) {\n      console.error(\"Error retrieving Roles:\", error);\n      next(error);\n    }\n  },\n  update_role: async (req, res, next) => {\n    let t;\n    try {\n      t = await _services_sequelize_service__WEBPACK_IMPORTED_MODULE_0__[\"default\"].transaction();\n      const {\n        id\n      } = req.params;\n      const {\n        label,\n        policies,\n        separate_access_rfids\n      } = req.body;\n      const role = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByPk(id, {\n        transaction: t\n      });\n      if (!role) {\n        await t.rollback();\n        return res.status(404).json({\n          status: false,\n          message: 'Role not found',\n          data: null\n        });\n      }\n      await role.update({\n        label\n      }, {\n        transaction: t\n      });\n      if (policies && policies.length > 0) {\n        await role.setPolicies(policies, {\n          transaction: t\n        });\n      }\n      if (separate_access_rfids && separate_access_rfids.length > 0) {\n        await role.setSeparate_access_rfids(separate_access_rfids, {\n          transaction: t\n        });\n      }\n      const updatedRole = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByPk(id, {\n        transaction: t,\n        include: ['policies', 'separate_access_rfids']\n      });\n      await t.commit();\n      res.status(200).json({\n        status: true,\n        message: 'Role updated successfully',\n        data: updatedRole\n      });\n    } catch (error) {\n      if (t && t.finished !== 'rollback' && t.finished !== 'commit') {\n        await t.rollback();\n      }\n      console.error(\"Error updating Role:\", error);\n      next(error);\n    }\n  },\n  delete_role: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      await _models__WEBPACK_IMPORTED_MODULE_3__.RolePolicy.destroy({\n        where: {\n          role_id: id\n        }\n      });\n      await _models__WEBPACK_IMPORTED_MODULE_3__.RoleRfidPermission.destroy({\n        where: {\n          role_id: id\n        }\n      });\n      const role = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByPk(id);\n      if (!role) {\n        return res.status(404).json({\n          status: false,\n          message: 'Role not found',\n          data: null\n        });\n      }\n      await role.destroy();\n      res.status(200).json({\n        status: true,\n        message: 'Role deleted successfully',\n        data: null\n      });\n    } catch (error) {\n      console.error(\"Error deleting Role:\", error);\n      next(error);\n    }\n  },\n  restore_role: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const role = await _models_Role__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByPk(id, {\n        paranoid: false\n      });\n      if (!role) {\n        return res.status(404).json({\n          status: false,\n          message: 'Role not found',\n          data: null\n        });\n      }\n      await role.restore();\n      res.status(200).json({\n        status: true,\n        message: 'Role restored successfully',\n        data: role\n      });\n    } catch (error) {\n      console.error(\"Error restoring Role:\", error);\n      next(error);\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (controller);\n\n//# sourceURL=webpack://kronos/./src/controllers/roles.controller.js?");

/***/ }),

/***/ "./src/controllers/users.controller.js":
/*!*********************************************!*\
  !*** ./src/controllers/users.controller.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/User */ \"./src/models/User.js\");\n/* harmony import */ var _models_Card__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/Card */ \"./src/models/Card.js\");\n/* harmony import */ var _models_Role__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/Role */ \"./src/models/Role.js\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst controller = {\n  create_user: async (req, res, next) => {\n    try {\n      const {\n        name,\n        last_name,\n        middle_name,\n        phone_number,\n        email,\n        print_pass,\n        card_uid,\n        role_id\n      } = req.body;\n      const existingUser = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n        where: {\n          [(sequelize__WEBPACK_IMPORTED_MODULE_3___default().Op).or]: [{\n            email\n          },\n          // Check for email\n          {\n            phone_number\n          },\n          // Check for phone number\n          card_uid && {\n            card_uid\n          } // Check for card_uid (if provided)\n          ]\n        },\n        paranoid: false // Include soft-deleted users\n      });\n      if (existingUser) {\n        if (existingUser.deletedAt) {\n          return res.status(409).json({\n            status: false,\n            message: 'User with this data already exists (deleted)',\n            data: null\n          });\n        } else {\n          if (email === existingUser.email) {\n            return res.status(409).json({\n              status: false,\n              message: 'User with this email already exists',\n              data: null\n            });\n          } else if (phone_number === existingUser.phone_number) {\n            return res.status(409).json({\n              status: false,\n              message: 'User with this phone number already exists',\n              data: null\n            });\n          } else if (card_uid && card_uid === existingUser.card_uid) {\n            return res.status(409).json({\n              status: false,\n              message: 'Card already associated with another user',\n              data: null\n            });\n          }\n        }\n      }\n      if (card_uid !== \"\") {\n        const existingCard = await _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findOne({\n          where: {\n            card_uid\n          }\n        });\n        if (existingCard) {\n          return res.status(403).json({\n            status: false,\n            message: 'Card already exists',\n            data: null\n          });\n        } else {\n          const card = await _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n            label: name + \" \" + last_name,\n            card_uid: card_uid\n          });\n        }\n      }\n      if (role_id !== \"\") {\n        const existingRole = await _models_Role__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findByPk(role_id);\n        if (!existingRole) {\n          return res.status(404).json({\n            status: false,\n            message: 'Role not found',\n            data: null\n          });\n        }\n      }\n      const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        name,\n        last_name,\n        middle_name,\n        phone_number,\n        email,\n        print_pass,\n        card_uid,\n        role_id\n      });\n      const userData = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(user.id, {\n        include: [{\n          model: _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          as: 'card'\n        }, {\n          model: _models_Role__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          as: 'role'\n        }]\n      });\n      res.status(201).json({\n        status: true,\n        message: 'User created successfully',\n        data: userData\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  get_user: async (req, res, next) => {\n    try {\n      const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(req.params.id, {\n        include: [{\n          model: _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          as: 'card'\n        }, {\n          model: _models_Role__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          as: 'role'\n        }],\n        paranoid: false\n      });\n      if (!user) {\n        return res.status(404).json({\n          status: false,\n          message: 'User not found',\n          data: null\n        });\n      }\n      res.status(200).json({\n        status: true,\n        message: 'User retrieved successfully',\n        data: user\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  get_users: async (req, res, next) => {\n    try {\n      const users = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findAll({\n        include: [{\n          model: _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          as: 'card'\n        }, {\n          model: _models_Role__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          as: 'role'\n        }],\n        paranoid: false,\n        ...req.paginationOptions\n      });\n      res.status(200).json({\n        status: true,\n        message: 'Users retrieved successfully',\n        data: users,\n        pagination: req.paginationInfo\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  update_user: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const {\n        name,\n        last_name,\n        middle_name,\n        phone_number,\n        email,\n        print_pass,\n        card_uid,\n        role_id\n      } = req.body;\n      const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id);\n      if (!user) {\n        return res.status(404).json({\n          status: false,\n          message: 'User not found',\n          data: null\n        });\n      }\n      if (card_uid !== \"\") {\n        const existingCard = await _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findOne({\n          where: {\n            card_uid: card_uid\n          }\n        });\n        if (!existingCard) {\n          return res.status(404).json({\n            status: false,\n            message: 'Card not found',\n            data: null\n          });\n        }\n      }\n      if (role_id !== \"\") {\n        const existingRole = await _models_Role__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findByPk(role_id);\n        if (!existingRole) {\n          return res.status(404).json({\n            status: false,\n            message: 'Role not found',\n            data: null\n          });\n        }\n      }\n      await user.update({\n        name,\n        last_name,\n        middle_name,\n        phone_number,\n        email,\n        print_pass,\n        card_uid,\n        role_id\n      });\n      const userData = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(user.id, {\n        include: [{\n          model: _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          as: 'card'\n        }, {\n          model: _models_Role__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          as: 'role'\n        }]\n      });\n      res.status(200).json({\n        status: true,\n        message: 'User updated successfully',\n        data: userData\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  delete_user: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id);\n      if (!user) {\n        return res.status(404).json({\n          status: false,\n          message: 'User not found',\n          data: null\n        });\n      }\n      await user.destroy();\n      res.status(200).json({\n        status: true,\n        message: 'User deleted successfully',\n        data: null\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n  restore_user: async (req, res, next) => {\n    try {\n      const {\n        id\n      } = req.params;\n      const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(id, {\n        paranoid: false\n      });\n      if (!user) {\n        return res.status(404).json({\n          status: false,\n          message: 'User not found',\n          data: null\n        });\n      }\n      await user.restore();\n      const userData = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByPk(user.id, {\n        include: [{\n          model: _models_Card__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          as: 'card'\n        }, {\n          model: _models_Role__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          as: 'role'\n        }]\n      });\n      res.status(200).json({\n        status: true,\n        message: 'User restored successfully',\n        data: userData\n      });\n    } catch (error) {\n      next(error);\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (controller);\n\n//# sourceURL=webpack://kronos/./src/controllers/users.controller.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _services_express_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/express.service */ \"./src/services/express.service.js\");\n/* harmony import */ var _services_sequelize_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/sequelize.service */ \"./src/services/sequelize.service.js\");\n/* harmony import */ var _services_tcpServer_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/tcpServer.service */ \"./src/services/tcpServer.service.js\");\n\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_0___default().config();\nconst services = [_services_express_service__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _services_sequelize_service__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _services_tcpServer_service__WEBPACK_IMPORTED_MODULE_3__[\"default\"]];\n(async () => {\n  try {\n    for (const service of services) {\n      await service.init();\n    }\n  } catch (error) {\n    console.log(error);\n    process.exit(1);\n  }\n})();\n\n//# sourceURL=webpack://kronos/./src/index.js?");

/***/ }),

/***/ "./src/middlewares/errorHandler.middleware.js":
/*!****************************************************!*\
  !*** ./src/middlewares/errorHandler.middleware.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_ApiError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/ApiError.js */ \"./src/utils/ApiError.js\");\n\n\n\nconst isJSON = str => {\n  try {\n    return JSON.parse(str) && !!str;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Global error handler for all routes\n * @param {ApiError} err\n * @param {Request} req\n * @param {Response} res\n * @param {NextFunction} next\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((err, _req, res, next) => {\n  if (res.headersSent) return next(err);\n  if ((0,_utils_ApiError_js__WEBPACK_IMPORTED_MODULE_2__.IsApiError)(err)) {\n    let locale = _req.headers[\"app-locale\"];\n    if (!locale) locale = \"ru\";\n    let message = \"\";\n    if (isJSON(err.message)) {\n      const errors = JSON.parse(err.message);\n      message = errors[locale];\n    }\n    return res.status(err.statusCode).send(message);\n  }\n  if (lodash__WEBPACK_IMPORTED_MODULE_1___default().isString(err)) {\n    return res.status(500).send(err);\n  }\n  console.log(err);\n  return res.status(500).send(\"Something went wrong\");\n});\n\n//# sourceURL=webpack://kronos/./src/middlewares/errorHandler.middleware.js?");

/***/ }),

/***/ "./src/middlewares/pagination.middleware.js":
/*!**************************************************!*\
  !*** ./src/middlewares/pagination.middleware.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paginate: () => (/* binding */ paginate),\n/* harmony export */   paginationMiddleware: () => (/* binding */ paginationMiddleware)\n/* harmony export */ });\nconst {\n  Op\n} = __webpack_require__(/*! sequelize */ \"sequelize\"); // Sequelize operators\n\nconst paginationMiddleware = model => {\n  return async (req, res, next) => {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 25;\n    const offset = (page - 1) * limit;\n    const options = {\n      offset,\n      limit\n    };\n    const filters = {};\n    if (req.query.search) {\n      filters.name = {\n        [Op.like]: `%${req.query.search}%` // Search by name (example)\n      };\n    }\n    if (filters) {\n      options.where = filters;\n    }\n    req.paginationOptions = options;\n    const totalEntries = await model.count();\n    const totalPages = Math.ceil(totalEntries / limit);\n    const nextPage = page < totalPages ? page + 1 : null;\n    const previousPage = page > 1 ? page - 1 : null;\n    req.paginationInfo = {\n      current_page: page,\n      total_pages: totalPages,\n      next_page: nextPage,\n      previous_page: previousPage\n    };\n    next();\n  };\n};\nasync function paginate(req, res, next) {}\n\n//# sourceURL=webpack://kronos/./src/middlewares/pagination.middleware.js?");

/***/ }),

/***/ "./src/models/Admin.js":
/*!*****************************!*\
  !*** ./src/models/Admin.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nclass Admin extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        defaultValue: () => (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)(),\n        primaryKey: true,\n        allowNull: false,\n        unique: true\n      },\n      name: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n      login: {\n        allowNull: false,\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().STRING),\n        unique: true\n      },\n      password: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().VIRTUAL),\n      password_hash: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().STRING)\n    }, {\n      sequelize,\n      timestamps: true,\n      paranoid: true,\n      underscored: true\n    });\n    this.addHook(\"beforeSave\", async item => {\n      if (item.password) {\n        item.password_hash = await bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().hash(item.password, 10);\n      }\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n  static associate(models) {}\n  checkPassword(password) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().compare(password, this.password_hash);\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Admin);\n\n//# sourceURL=webpack://kronos/./src/models/Admin.js?");

/***/ }),

/***/ "./src/models/Card.js":
/*!****************************!*\
  !*** ./src/models/Card.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass Card extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        defaultValue: () => (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)(),\n        primaryKey: true,\n        allowNull: false,\n        unique: true\n      },\n      card_uid: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false,\n        unique: true\n      },\n      label: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT)\n    }, {\n      sequelize,\n      timestamps: true,\n      paranoid: true,\n      underscored: true\n    });\n\n    // Добавляем хук beforeCreate для установки значения createdAt\n    this.addHook('beforeCreate', card => {\n      card.createdAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // Добавляем хук beforeUpdate для установки значения updatedAt\n    this.addHook('beforeUpdate', card => {\n      card.updatedAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // Добавляем хук beforeDestroy для установки значения deletedAt\n    this.addHook('beforeDestroy', card => {\n      card.deletedAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Card);\n\n//# sourceURL=webpack://kronos/./src/models/Card.js?");

/***/ }),

/***/ "./src/models/History.js":
/*!*******************************!*\
  !*** ./src/models/History.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass History extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        defaultValue: () => (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)(),\n        primaryKey: true,\n        allowNull: false,\n        unique: true\n      },\n      card_uid: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false,\n        references: {\n          model: 'cards',\n          key: 'card_uid'\n        }\n      },\n      card_label: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      ip_address: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      rfid_label: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      mode: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0___default().ENUM(\"auto\", \"scanner\"),\n        allowNull: false\n      },\n      direction: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().STRING),\n        allowNull: false\n      },\n      attendance: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().BOOLEAN),\n        allowNull: false\n      },\n      duration: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().INTEGER),\n        allowNull: false\n      },\n      name: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      last_name: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      middle_name: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      phone_number: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      email: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      print_pass: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false\n      },\n      date: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().DATEONLY),\n        allowNull: false\n      },\n      time: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TIME),\n        allowNull: false\n      },\n      entered: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().BOOLEAN),\n        allowNull: false,\n        defaultValue: true\n      }\n    }, {\n      sequelize,\n      timestamps: false,\n      underscored: true\n    });\n    // this.sync({ alter: true });\n    return this;\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (History);\n\n//# sourceURL=webpack://kronos/./src/models/History.js?");

/***/ }),

/***/ "./src/models/Policy.js":
/*!******************************!*\
  !*** ./src/models/Policy.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass Policy extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        defaultValue: () => (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)(),\n        primaryKey: true,\n        allowNull: false,\n        unique: true\n      },\n      label: {\n        allowNull: false,\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().STRING),\n        unique: true\n      }\n    }, {\n      sequelize,\n      timestamps: true,\n      underscored: true\n    });\n\n    // Добавляем хук beforeCreate для установки значения createdAt\n    this.addHook('beforeCreate', policy => {\n      policy.createdAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // Добавляем хук beforeUpdate для установки значения updatedAt\n    this.addHook('beforeUpdate', policy => {\n      policy.updatedAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n  static associate(models) {\n    this.belongsToMany(models.Rfid, {\n      through: models.PolicyRfid,\n      as: 'rfids',\n      foreignKey: \"policy_id\",\n      otherKey: \"rfid_id\"\n    });\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Policy);\n\n//# sourceURL=webpack://kronos/./src/models/Policy.js?");

/***/ }),

/***/ "./src/models/PolicyRfid.js":
/*!**********************************!*\
  !*** ./src/models/PolicyRfid.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n\nclass PolicyRfid extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      policy_id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'Policies',\n          key: 'id'\n        },\n        primaryKey: true\n      },\n      rfid_id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'Rfids',\n          key: 'id'\n        },\n        primaryKey: true\n      }\n    }, {\n      sequelize,\n      modelName: 'PolicyRfid',\n      tableName: 'policy_rfids',\n      timestamps: false,\n      underscored: true\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PolicyRfid);\n\n//# sourceURL=webpack://kronos/./src/models/PolicyRfid.js?");

/***/ }),

/***/ "./src/models/Rfid.js":
/*!****************************!*\
  !*** ./src/models/Rfid.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass Rfid extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        defaultValue: () => (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)(),\n        primaryKey: true,\n        allowNull: false,\n        unique: true\n      },\n      ipAddress: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().STRING),\n        allowNull: false,\n        unique: true\n      },\n      label: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().STRING),\n        allowNull: true\n      },\n      mode: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0___default().ENUM(\"auto\", \"scanner\"),\n        allowNull: false,\n        defaultValue: \"auto\"\n      },\n      direction: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().STRING),\n        allowNull: false,\n        defaultValue: \"in\"\n      },\n      attendance: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().BOOLEAN),\n        defaultValue: false,\n        allowNull: false\n      },\n      duration: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().INTEGER),\n        defaultValue: 3\n      }\n    }, {\n      sequelize,\n      timestamps: true,\n      underscored: true\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n  static associate(models) {\n    this.belongsToMany(models.Policy, {\n      through: models.PolicyRfid,\n      as: \"policies\",\n      foreignKey: \"rfid_id\",\n      otherKey: \"policy_id\"\n    });\n    this.belongsToMany(models.Role, {\n      through: models.RoleRfidPermission,\n      as: \"roles\",\n      foreignKey: \"rfid_id\",\n      otherKey: \"role_id\"\n    });\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rfid);\n\n//# sourceURL=webpack://kronos/./src/models/Rfid.js?");

/***/ }),

/***/ "./src/models/Role.js":
/*!****************************!*\
  !*** ./src/models/Role.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass Role extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        defaultValue: () => (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)(),\n        primaryKey: true,\n        allowNull: false,\n        unique: true\n      },\n      label: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false,\n        unique: true\n      }\n    }, {\n      sequelize,\n      timestamps: true,\n      underscored: true\n    });\n\n    // Добавляем хук beforeCreate для установки значения createdAt\n    this.addHook('beforeCreate', role => {\n      role.createdAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // Добавляем хук beforeUpdate для установки значения updatedAt\n    this.addHook('beforeUpdate', role => {\n      role.updatedAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n  static associate(models) {\n    this.belongsToMany(models.Policy, {\n      through: models.RolePolicy,\n      as: 'policies',\n      foreignKey: \"role_id\",\n      otherKey: \"policy_id\"\n    });\n    this.belongsToMany(models.Rfid, {\n      through: models.RoleRfidPermission,\n      as: 'separate_access_rfids',\n      foreignKey: \"role_id\",\n      otherKey: \"rfid_id\"\n    });\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Role);\n\n//# sourceURL=webpack://kronos/./src/models/Role.js?");

/***/ }),

/***/ "./src/models/RolePolicy.js":
/*!**********************************!*\
  !*** ./src/models/RolePolicy.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n\nclass RolePolicy extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      policy_id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'Policies',\n          key: 'id'\n        },\n        primaryKey: true\n      },\n      role_id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'Roles',\n          key: 'id'\n        },\n        primaryKey: true\n      }\n    }, {\n      sequelize,\n      modelName: 'RolePolicy',\n      tableName: 'role_policies',\n      timestamps: false,\n      underscored: true\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RolePolicy);\n\n//# sourceURL=webpack://kronos/./src/models/RolePolicy.js?");

/***/ }),

/***/ "./src/models/RoleRfidPermission.js":
/*!******************************************!*\
  !*** ./src/models/RoleRfidPermission.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n\nclass RoleRfidPermission extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      rfid_id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'Rfids',\n          key: 'id'\n        },\n        primaryKey: true\n      },\n      role_id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'Roles',\n          key: 'id'\n        },\n        primaryKey: true\n      }\n    }, {\n      sequelize,\n      modelName: 'RoleRfidPermission',\n      tableName: 'role_rfid_permissions',\n      timestamps: false,\n      underscored: true\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RoleRfidPermission);\n\n//# sourceURL=webpack://kronos/./src/models/RoleRfidPermission.js?");

/***/ }),

/***/ "./src/models/User.js":
/*!****************************!*\
  !*** ./src/models/User.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass User extends sequelize__WEBPACK_IMPORTED_MODULE_0__.Model {\n  static init(sequelize) {\n    super.init({\n      id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        defaultValue: () => (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)(),\n        primaryKey: true,\n        allowNull: false,\n        unique: true\n      },\n      name: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: false,\n        unique: false\n      },\n      last_name: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: true,\n        unique: false\n      },\n      middle_name: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: true,\n        unique: false\n      },\n      phone_number: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: true,\n        unique: true\n      },\n      card_uid: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'cards',\n          key: 'card_uid'\n        },\n        allowNull: true,\n        unique: true\n      },\n      role_id: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        references: {\n          model: 'roles',\n          key: 'id'\n        },\n        allowNull: true,\n        unique: false\n      },\n      email: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: true,\n        unique: true\n      },\n      print_pass: {\n        type: (sequelize__WEBPACK_IMPORTED_MODULE_0___default().TEXT),\n        allowNull: true,\n        unique: false\n      }\n    }, {\n      sequelize,\n      timestamps: true,\n      paranoid: true,\n      underscored: true\n    });\n\n    // Добавляем хук beforeCreate для установки значения createdAt\n    this.addHook('beforeCreate', user => {\n      user.createdAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // Добавляем хук beforeUpdate для установки значения updatedAt\n    this.addHook('beforeUpdate', user => {\n      user.updatedAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // Добавляем хук beforeDestroy для установки значения deletedAt\n    this.addHook('beforeDestroy', user => {\n      user.deletedAt = new Date(); // Устанавливаем текущее время\n    });\n\n    // this.sync({ alter: true });\n    return this;\n  }\n  static associate(models) {\n    this.belongsTo(models.Role, {\n      foreignKey: 'role_id',\n      as: 'role'\n    });\n    this.hasOne(models.Card, {\n      sourceKey: 'card_uid',\n      foreignKey: 'card_uid',\n      as: 'card'\n    });\n  }\n\n  // Метод для проверки и преобразования пустых значений в null\n  static transformEmptyToNull(userData) {\n    if (userData.card_id === '') userData.card_id = null;\n    if (userData.email === '') userData.email = null;\n    return userData;\n  }\n\n  // Переопределяем метод create для обработки пустых значений\n  static async create(userData) {\n    userData = this.transformEmptyToNull(userData);\n    return super.create(userData);\n  }\n\n  // Переопределяем метод update для обработки пустых значений\n  static async update(values, options) {\n    values = this.transformEmptyToNull(values);\n    return super.update(values, options);\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n\n//# sourceURL=webpack://kronos/./src/models/User.js?");

/***/ }),

/***/ "./src/models/index.js":
/*!*****************************!*\
  !*** ./src/models/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Admin: () => (/* reexport safe */ _Admin_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   Card: () => (/* reexport safe */ _Card_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   History: () => (/* reexport safe */ _History_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Policy: () => (/* reexport safe */ _Policy_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   PolicyRfid: () => (/* reexport safe */ _PolicyRfid_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   Rfid: () => (/* reexport safe */ _Rfid_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   Role: () => (/* reexport safe */ _Role_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   RolePolicy: () => (/* reexport safe */ _RolePolicy_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   RoleRfidPermission: () => (/* reexport safe */ _RoleRfidPermission_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   User: () => (/* reexport safe */ _User_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _Admin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Admin.js */ \"./src/models/Admin.js\");\n/* harmony import */ var _Card_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Card.js */ \"./src/models/Card.js\");\n/* harmony import */ var _History_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./History.js */ \"./src/models/History.js\");\n/* harmony import */ var _Policy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Policy.js */ \"./src/models/Policy.js\");\n/* harmony import */ var _PolicyRfid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PolicyRfid.js */ \"./src/models/PolicyRfid.js\");\n/* harmony import */ var _Rfid_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Rfid.js */ \"./src/models/Rfid.js\");\n/* harmony import */ var _Role_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Role.js */ \"./src/models/Role.js\");\n/* harmony import */ var _RolePolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RolePolicy.js */ \"./src/models/RolePolicy.js\");\n/* harmony import */ var _RoleRfidPermission_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./RoleRfidPermission.js */ \"./src/models/RoleRfidPermission.js\");\n/* harmony import */ var _User_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./User.js */ \"./src/models/User.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://kronos/./src/models/index.js?");

/***/ }),

/***/ "./src/routes/auth.routes.js":
/*!***********************************!*\
  !*** ./src/routes/auth.routes.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _controllers_auth_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/auth.controller.js */ \"./src/controllers/auth.controller.js\");\n\n\nconst route = (0,express__WEBPACK_IMPORTED_MODULE_0__.Router)();\n\n/**\n * @openapi\n * '/login':\n *   post:\n *     tags:\n *     - Auth\n *     summary: authentication for admins\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/adminLoginSchema'\n *     responses:\n *       200:\n *         description: Admin successfully logged in!\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/adminLoginResponseSchema'\n *       500:\n *         description: Server Error\n */\nroute.post(\"/login\", _controllers_auth_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].login);\n\n/**\n * @openapi\n * '/refresh':\n *   post:\n *     tags:\n *     - Auth\n *     summary: get new access and refersh tokens\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/refreshTokenSchema'\n *     responses:\n *       200:\n *         description: Admin successfully logged in!\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/refreshTokenSchema'\n *       500:\n *         description: Server Error\n */\nroute.post(\"/refresh\", _controllers_auth_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].refresh);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (route);\n\n//# sourceURL=webpack://kronos/./src/routes/auth.routes.js?");

/***/ }),

/***/ "./src/routes/card.routes.js":
/*!***********************************!*\
  !*** ./src/routes/card.routes.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/cards.controller.js */ \"./src/controllers/cards.controller.js\");\n/* harmony import */ var _middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/pagination.middleware */ \"./src/middlewares/pagination.middleware.js\");\n/* harmony import */ var _models_Card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/Card */ \"./src/models/Card.js\");\n\n\n\n\nconst route = (0,express__WEBPACK_IMPORTED_MODULE_0__.Router)();\n\n/**\n * @openapi\n * '/card':\n *   post:\n *     tags:\n *     - Cards\n *     summary: Create a new card\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/CardPostSchema'\n *     responses:\n *       201:\n *         description: Card created successfully!\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/CardPostResponse'\n *       500:\n *         description: Server Error\n *       409:\n *         description: Card with this card_uid already exists or (deleted)\n */\nroute.post(\"/card\", _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create_card);\n\n/**\n * @openapi\n * '/card/{id}':\n *   get:\n *     tags:\n *     - Cards\n *     summary: Get a specific card by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the card.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Card retrieved successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/getCardResponseSchema'\n *       404:\n *         description: Card not found.\n *       500:\n *         description: Server Error\n */\nroute.get(\"/card/:id\", _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_card);\n\n/**\n * @openapi\n * '/cards':\n *   get:\n *     tags:\n *     - Cards\n *     summary: Get all cards\n *     parameters:  # Define query parameters\n *       - name: limit\n *         in: query\n *         description: The maximum number of cards per page (default 25).\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *       - name: page\n *         in: query\n *         description: The current page number to retrieve.\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *     responses:\n *       200:\n *         description: Cards retrieved successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/getCardsResponseSchema'\n *       500:\n *         description: Server Error\n */\nroute.get(\"/cards\", (0,_middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__.paginationMiddleware)(_models_Card__WEBPACK_IMPORTED_MODULE_3__[\"default\"]), _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_cards);\n\n/**\n * @openapi\n * '/card/{id}':\n *   put:\n *     tags:\n *     - Cards\n *     summary: Update an existing card\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the card to update.\n *         schema:\n *           type: string\n *           format: uuid\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/Card'\n *     responses:\n *       200:\n *         description: Card updated successfully.\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/CardResponse'\n *       404:\n *         description: Card with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/card/:id\", _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update_card);\n\n/**\n * @openapi\n * '/card/{id}':\n *   delete:\n *     tags:\n *     - Cards\n *     summary: Delete a card by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the card to delete.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Card deleted successfully.\n *       404:\n *         description: Card with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.delete(\"/card/:id\", _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete_card);\n\n/**\n * @openapi\n * '/restore-card/{id}':\n *   put:\n *     tags:\n *     - Cards\n *     summary: Restore deleted card\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the card to restore.\n *         schema:\n *           type: string\n *           format: uuid\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/Card'\n *     responses:\n *       200:\n *         description: Card updated successfully.\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/CardResponse'\n *       404:\n *         description: Card with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/restore-card/:id\", _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].restore_card);\nroute.get(\"/unassociated-cards\", _controllers_cards_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_unassociated_cards);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (route);\n\n//# sourceURL=webpack://kronos/./src/routes/card.routes.js?");

/***/ }),

/***/ "./src/routes/history.routes.js":
/*!**************************************!*\
  !*** ./src/routes/history.routes.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _controllers_history_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/history.controller.js */ \"./src/controllers/history.controller.js\");\n/* harmony import */ var _middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/pagination.middleware */ \"./src/middlewares/pagination.middleware.js\");\n/* harmony import */ var _models_History__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/History */ \"./src/models/History.js\");\n\n\n\n\nconst route = (0,express__WEBPACK_IMPORTED_MODULE_0__.Router)();\n\n/**\n * @openapi\n * '/history':\n *   get:\n *     tags:\n *     - History\n *     summary: Get history of entrance\n *     parameters:  # Define query parameters\n *       - name: limit\n *         in: query\n *         description: The maximum number of cards per page (default 25).\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *       - name: page\n *         in: query\n *         description: The current page number to retrieve.\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *       - name: startDate  # Filter by date range (optional)\n *         in: query\n *         description: Start date of the history range (YYYY-MM-DD format).\n *         required: false  # Optional parameter\n *         type: string\n *         format: date\n *       - name: endDate  # Filter by date range (optional)\n *         in: query\n *         description: End date of the history range (YYYY-MM-DD format).\n *         required: false  # Optional parameter\n *         type: string\n *         format: date\n *       - name: cardLabel  # Filter by partial match on Card.label (optional)\n *         in: query\n *         description: Filter by a partial match on the card label.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: cardUid  # Filter by exact match on Card.card_uid (optional)\n *         in: query\n *         description: Filter by the exact card UID.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: rfidLabel  # Filter by partial match on Rfid.label (optional)\n *         in: query\n *         description: Filter by a partial match on the rfid label.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: ipAddress  # Filter by exact match on Rfid.ip_address (optional)\n *         in: query\n *         description: Filter by the exact IP address of the Rfid reader.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: mode  # Filter by exact match on Rfid.mode (optional)\n *         in: query\n *         description: Filter by the mode of the Rfid reader (e.g., \"scanner\", \"auto\").\n *         required: false  # Optional parameter\n *         type: string\n *       - name: direction  # Filter by exact match on Rfid.direction (optional)\n *         in: query\n *         description: Filter by the direction of the Rfid read (e.g., \"in\", \"out\").\n *         required: false  # Optional parameter\n *         type: string\n *       - name: attendance  # Filter by exact match on Rfid.attendance (optional)\n *         in: query\n *         description: Filter by the attendance status of the Rfid read (true or false).\n *         required: false  # Optional parameter\n *         type: boolean\n *       - name: name  # Filter by partial match on User.name (optional)\n *         in: query\n *         description: Filter by a partial match on the user's name.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: lastName  # Filter by partial match on User.last_name (optional)\n *         in: query\n *         description: Filter by a partial match on the user's last name.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: middleName  # Filter by partial match on User.middle_name (optional)\n *         in: query\n *         description: Filter by a partial match on the user's middle name.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: phoneNumber  # Filter by exact match on User.phone_number (optional)\n *         in: query\n *         description: Filter by the user's phone number.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: email  # Filter by exact match on User.email (optional)\n *         in: query\n *         description: Filter by the user's email.\n *         required: false  # Optional parameter\n *         type: string\n *       - name: printPass  # Filter by exact match on User.printPass (optional)\n *         in: query\n *         description: Filter by the user's print pass.\n *         required: false  # Optional parameter\n *         type: string\n *     responses:\n *       200:\n *         description: Fetched Successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/getHistoryResponseSchema'\n *       500:\n *         description: Server Error\n */\nroute.get('/history', (0,_middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__.paginationMiddleware)(_models_History__WEBPACK_IMPORTED_MODULE_3__[\"default\"]), _controllers_history_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_history);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (route);\n\n//# sourceURL=webpack://kronos/./src/routes/history.routes.js?");

/***/ }),

/***/ "./src/routes/index.js":
/*!*****************************!*\
  !*** ./src/routes/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authRoute: () => (/* reexport safe */ _auth_routes_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   cardRoute: () => (/* reexport safe */ _card_routes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   historyRoute: () => (/* reexport safe */ _history_routes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   policyRoute: () => (/* reexport safe */ _policy_route_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   readerRoute: () => (/* reexport safe */ _reader_routes_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   roleRoute: () => (/* reexport safe */ _role_routes_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   userRoute: () => (/* reexport safe */ _user_routes_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _card_routes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./card.routes.js */ \"./src/routes/card.routes.js\");\n/* harmony import */ var _history_routes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./history.routes.js */ \"./src/routes/history.routes.js\");\n/* harmony import */ var _policy_route_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policy.route.js */ \"./src/routes/policy.route.js\");\n/* harmony import */ var _reader_routes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reader.routes.js */ \"./src/routes/reader.routes.js\");\n/* harmony import */ var _role_routes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./role.routes.js */ \"./src/routes/role.routes.js\");\n/* harmony import */ var _user_routes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./user.routes.js */ \"./src/routes/user.routes.js\");\n/* harmony import */ var _auth_routes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./auth.routes.js */ \"./src/routes/auth.routes.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://kronos/./src/routes/index.js?");

/***/ }),

/***/ "./src/routes/policy.route.js":
/*!************************************!*\
  !*** ./src/routes/policy.route.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _controllers_policies_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/policies.controller.js */ \"./src/controllers/policies.controller.js\");\n/* harmony import */ var _middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/pagination.middleware */ \"./src/middlewares/pagination.middleware.js\");\n/* harmony import */ var _models_Policy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/Policy */ \"./src/models/Policy.js\");\n\n\n\n\nconst route = (0,express__WEBPACK_IMPORTED_MODULE_0__.Router)();\n\n/**\n * @openapi\n * '/policy':\n *   post:\n *     tags:\n *     - Policies\n *     summary: Create a new policy\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *            schema:\n *              $ref: '#/components/schemas/createPolicySchema'\n *     responses:\n *       201:\n *         description: Card created successfully!\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/createPolicyResponse'\n *       500:\n *         description: Server Error\n *       409:\n *         description: Policy with this label already exists or deleted\n */\nroute.post(\"/policy\", _controllers_policies_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create_policy);\n\n/**\n * @openapi\n * '/policy/{id}':\n *   get:\n *     tags:\n *     - Policies\n *     summary: Get a specific policy by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the policy.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Policy found successfully.\n *         content:\n *           application/json:\n *             schema:\n *              $ref: '#/components/schemas/getPolicyResponseSchema'\n *       404:\n *         description: Policy with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.get(\"/policy/:id\", _controllers_policies_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_policy);\n\n/**\n * @openapi\n * '/policies':\n *   get:\n *     tags:\n *     - Policies\n *     summary: Get all policies\n *     parameters:  # Define query parameters\n *       - name: limit\n *         in: query\n *         description: The maximum number of cards per page (default 25).\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *       - name: page\n *         in: query\n *         description: The current page number to retrieve.\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *     responses:\n *       200:\n *         description: Fetched Successfully\n *         content:\n *           application/json:\n *             schema:\n *              $ref: '#/components/schemas/getPoliciesResponseSchema'\n *       500:\n *         description: Server Error\n */\nroute.get(\"/policies\", (0,_middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__.paginationMiddleware)(_models_Policy__WEBPACK_IMPORTED_MODULE_3__[\"default\"]), _controllers_policies_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_policies);\n\n/**\n * @openapi\n * '/policy/{id}':\n *   put:\n *     tags:\n *     - Policies\n *     summary: Update an existing policy\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the policy to update.\n *         schema:\n *           type: string\n *           format: uuid\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/createPolicySchema'\n *     responses:\n *       200:\n *         description: Policy updated successfully.\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/createPolicyResponse'\n *       400:\n *         description: Missing required fields or invalid data.\n *       404:\n *         description: Policy with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/policy/:id\", _controllers_policies_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update_policy);\n\n/**\n * @openapi\n * '/policy/{id}':\n *   delete:\n *     tags:\n *     - Policies\n *     summary: Delete a policy by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the policy to delete.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Policy deleted successfully.\n *       404:\n *         description: Policy with the provided ID not found.\n *       500:\n *         description: Server Error\n */\n\nroute.delete(\"/policy/:id\", _controllers_policies_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete_policy);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (route);\n\n//# sourceURL=webpack://kronos/./src/routes/policy.route.js?");

/***/ }),

/***/ "./src/routes/reader.routes.js":
/*!*************************************!*\
  !*** ./src/routes/reader.routes.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _controllers_reader_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/reader.controller.js */ \"./src/controllers/reader.controller.js\");\n/* harmony import */ var _middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/pagination.middleware */ \"./src/middlewares/pagination.middleware.js\");\n/* harmony import */ var _models_Rfid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/Rfid */ \"./src/models/Rfid.js\");\n\n\n\n\nconst route = (0,express__WEBPACK_IMPORTED_MODULE_0__.Router)();\n/**\n * @openapi\n * '/rfid':\n *  post:\n *     tags:\n *     - RFID\n *     summary: Create a RFID reader\n *     requestBody:\n *      required: true\n *      content:\n *        application/json:\n *           schema:\n *              $ref: '#/components/schemas/createReaderSchema'\n *     responses:\n *      201:\n *        description: RFID Reader created successfully!\"\n *        content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/createReaderResponseSchema'\n *      409:\n *         description: Rfid with this ip address already exists or (deleted)\n *      400:\n *        description: Missing required fields!\n *      500:\n *        description: Server Error\n */\nroute.post(\"/rfid\", _controllers_reader_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create_rfid);\n\n/**\n * @openapi\n * '/rfids':\n *  get:\n *     tags:\n *     - RFID\n *     summary: Get all RFID readers\n *     parameters:  # Define query parameters\n *       - name: limit\n *         in: query\n *         description: The maximum number of cards per page (default 25).\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *       - name: page\n *         in: query\n *         description: The current page number to retrieve.\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *     responses:\n *      200:\n *        description: Fetched Successfully\n *        content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/getReadersResponseSchema'\n *      500:\n *        description: Server Error\n */\nroute.get(\"/rfids\", (0,_middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__.paginationMiddleware)(_models_Rfid__WEBPACK_IMPORTED_MODULE_3__[\"default\"]), _controllers_reader_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_rfids);\n\n/**\n * @openapi\n * '/rfid/{id}':\n *   get:\n *     tags:\n *     - RFID\n *     summary: Get a specific RFID reader by its ID\n *     parameters:\n *     - in: path\n *       name: id\n *       required: true\n *       description: The unique identifier of the RFID reader.\n *       schema:\n *         type: string\n *     responses:\n *       200:\n *         description: RFID reader found successfully.\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/getReaderResponseSchema'\n *       404:\n *         description: RFID with that ID not found.\n *       500:\n *         description: Server Error\n */\nroute.get(\"/rfid/:id\", _controllers_reader_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_rfid);\n\n/**\n * @openapi\n * '/rfid/{id}':\n *   put:\n *     tags:\n *      - RFID\n *     summary: Update an existing RFID reader\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the RFID reader to update.\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       content:\n *        application/json:\n *           schema:\n *              $ref: '#/components/schemas/createReaderSchema'\n *     responses:\n *       200:\n *         description: RFID reader updated successfully.\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/createReaderResponseSchema'\n *       400:\n *         description: Missing required fields.\n *       404:\n *         description: RFID reader with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/rfid/:id\", _controllers_reader_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update_rfid);\n\n/**\n * @openapi\n * '/rfid/{id}':\n *   delete:\n *     tags:\n *      - RFID\n *     summary: Delete an RFID reader by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the RFID reader to delete.\n *         schema:\n *           type: string\n *     responses:\n *       200:\n *         description: RFID reader deleted successfully.\n *       404:\n *         description: RFID reader with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.delete(\"/rfid/:id\", _controllers_reader_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete_rfid);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (route);\n\n//# sourceURL=webpack://kronos/./src/routes/reader.routes.js?");

/***/ }),

/***/ "./src/routes/role.routes.js":
/*!***********************************!*\
  !*** ./src/routes/role.routes.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _controllers_roles_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/roles.controller.js */ \"./src/controllers/roles.controller.js\");\n/* harmony import */ var _middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/pagination.middleware */ \"./src/middlewares/pagination.middleware.js\");\n/* harmony import */ var _models_Role__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/Role */ \"./src/models/Role.js\");\n\n\n\n\nconst route = (0,express__WEBPACK_IMPORTED_MODULE_0__.Router)();\n\n/**\n * @openapi\n * '/role':\n *   post:\n *     tags:\n *     - Roles\n *     summary: Create a new role\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *          schema:\n *               $ref: '#/components/schemas/createRoleSchema'\n *     responses:\n *       201:\n *         description: User created successfully!\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/createRoleResponseSchema'\n *       404:\n *         description: Role not found\n *       409:\n *         description: Role with this label already exists or (deleted)\n *       500:\n *         description: Server Error\n */\nroute.post(\"/role\", _controllers_roles_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create_role);\n\n/**\n * @openapi\n * '/roles':\n *   get:\n *     tags:\n *     - Roles\n *     summary: Get all roles\n *     parameters:  # Define query parameters\n *       - name: limit\n *         in: query\n *         description: The maximum number of cards per page (default 25).\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *       - name: page\n *         in: query\n *         description: The current page number to retrieve.\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *     responses:\n *       200:\n *         description: Fetched Successfully\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/getRolesResponseSchema'\n *       500:\n *         description: Server Error\n */\nroute.get(\"/roles\", (0,_middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__.paginationMiddleware)(_models_Role__WEBPACK_IMPORTED_MODULE_3__[\"default\"]), _controllers_roles_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_roles);\n\n/**\n * @openapi\n * '/role/{id}':\n *   get:\n *     tags:\n *     - Roles\n *     summary: Get a specific role by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the role.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Role found successfully.\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/getRoleResponseSchema'\n *       404:\n *         description: Role not found.\n *       500:\n *         description: Server Error\n */\nroute.get(\"/role/:id\", _controllers_roles_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_role);\n\n/**\n * @openapi\n * '/role/{id}':\n *   put:\n *     tags:\n *     - Roles\n *     summary: Update an existing role\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the role to update.\n *         schema:\n *           type: string\n *           format: uuid\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *          schema:\n *               $ref: '#/components/schemas/createRoleSchema'\n *     responses:\n *       200:\n *         description: Role updated successfully.\n *       404:\n *         description: Role with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/role/:id\", _controllers_roles_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update_role);\n\n/**\n * @openapi\n * '/role/{id}':\n *   delete:\n *     tags:\n *     - Roles\n *     summary: Delete a role by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the role to delete.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Role deleted successfully.\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/createRoleResponseSchema'\n *       404:\n *         description: Role with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.delete(\"/role/:id\", _controllers_roles_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete_role);\n\n/**\n * @openapi\n * '/restore-role/{id}':\n *   put:\n *     tags:\n *     - Roles\n *     summary: Restore deleted role\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the role to update.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Restore role successfully.\n *       404:\n *         description: Role with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/restore-role/:id\", _controllers_roles_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].restore_role);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (route);\n\n//# sourceURL=webpack://kronos/./src/routes/role.routes.js?");

/***/ }),

/***/ "./src/routes/user.routes.js":
/*!***********************************!*\
  !*** ./src/routes/user.routes.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _controllers_users_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/users.controller.js */ \"./src/controllers/users.controller.js\");\n/* harmony import */ var _middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/pagination.middleware */ \"./src/middlewares/pagination.middleware.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/User */ \"./src/models/User.js\");\n\n\n\n\nconst route = (0,express__WEBPACK_IMPORTED_MODULE_0__.Router)();\n\n/**\n * @openapi\n * '/user':\n *   post:\n *     tags:\n *     - Users\n *     summary: Create a new user\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *          schema:\n *               $ref: '#/components/schemas/createUserSchema'\n *     responses:\n *       201:\n *         description: User created successfully!\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/createUserResponseSchema'\n *       404:\n *         description: Card not found\n *       500:\n *         description: Server Error\n */\nroute.post(\"/user\", _controllers_users_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create_user);\n\n/**\n * @openapi\n * '/users':\n *   get:\n *     tags:\n *     - Users\n *     summary: Get all users\n *     parameters:  # Define query parameters\n *       - name: limit\n *         in: query\n *         description: The maximum number of cards per page (default 25).\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *       - name: page\n *         in: query\n *         description: The current page number to retrieve.\n *         required: false  # Optional parameter\n *         type: integer\n *         minimum: 1  # Minimum value constraint\n *     responses:\n *       200:\n *         description: Fetched Successfully\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/getUsersResponseSchema'\n *       409:\n *         description: User with this data already exists or (deleted)\n *       500:\n *         description: Server Error\n */\nroute.get(\"/users\", (0,_middlewares_pagination_middleware__WEBPACK_IMPORTED_MODULE_2__.paginationMiddleware)(_models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"]), _controllers_users_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_users);\n\n/**\n * @openapi\n * '/user/{id}':\n *   get:\n *     tags:\n *     - Users\n *     summary: Get a specific user by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the user.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: User found successfully.\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/getUserResponseSchema'\n *       404:\n *         description: User not found.\n *       500:\n *         description: Server Error\n */\nroute.get(\"/user/:id\", _controllers_users_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get_user);\n\n/**\n * @openapi\n * '/user/{id}':\n *   put:\n *     tags:\n *     - Users\n *     summary: Update an existing user\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the user to update.\n *         schema:\n *           type: string\n *           format: uuid\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *          schema:\n *               $ref: '#/components/schemas/createUserSchema'\n *     responses:\n *       200:\n *         description: User updated successfully.\n *       404:\n *         description: User with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/user/:id\", _controllers_users_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update_user);\n\n/**\n * @openapi\n * '/user/{id}':\n *   delete:\n *     tags:\n *     - Users\n *     summary: Delete a user by its ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the user to delete.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: User deleted successfully.\n *         content:\n *          application/json:\n *              schema:\n *               $ref: '#/components/schemas/createUserResponseSchema'\n *       404:\n *         description: User with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.delete(\"/user/:id\", _controllers_users_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete_user);\n\n/**\n * @openapi\n * '/restore-user/{id}':\n *   put:\n *     tags:\n *     - Users\n *     summary: Restore deleted user\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: The unique identifier of the user to update.\n *         schema:\n *           type: string\n *           format: uuid\n *     responses:\n *       200:\n *         description: Restore user successfully.\n *       404:\n *         description: User with the provided ID not found.\n *       500:\n *         description: Server Error\n */\nroute.put(\"/restore-user/:id\", _controllers_users_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].restore_user);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (route);\n\n//# sourceURL=webpack://kronos/./src/routes/user.routes.js?");

/***/ }),

/***/ "./src/services/express.service.js":
/*!*****************************************!*\
  !*** ./src/services/express.service.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cors */ \"cors\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cors__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _middlewares_errorHandler_middleware_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../middlewares/errorHandler.middleware.js */ \"./src/middlewares/errorHandler.middleware.js\");\n/* harmony import */ var _routes_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../routes/index.js */ \"./src/routes/index.js\");\n/* harmony import */ var _tcpServer_serverStart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../tcpServer/serverStart */ \"./src/tcpServer/serverStart.js\");\n/* harmony import */ var _tcpServer_test__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../tcpServer/test */ \"./src/tcpServer/test.js\");\n/* harmony import */ var _utils_swagger_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/swagger.js */ \"./src/utils/swagger.js\");\n/* harmony import */ var _socket_io_service_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./socket.io.service.js */ \"./src/services/socket.io.service.js\");\n\n\n\n\n\n\n\n\n\n\nconst expressService = {\n  init: async () => {\n    try {\n      /*\n      Loading routes automatically\n      */\n      let routes = [_routes_index_js__WEBPACK_IMPORTED_MODULE_5__.cardRoute, _routes_index_js__WEBPACK_IMPORTED_MODULE_5__.historyRoute, _routes_index_js__WEBPACK_IMPORTED_MODULE_5__.policyRoute, _routes_index_js__WEBPACK_IMPORTED_MODULE_5__.readerRoute, _routes_index_js__WEBPACK_IMPORTED_MODULE_5__.roleRoute, _routes_index_js__WEBPACK_IMPORTED_MODULE_5__.userRoute, _routes_index_js__WEBPACK_IMPORTED_MODULE_5__.authRoute];\n      const app = express__WEBPACK_IMPORTED_MODULE_1___default()();\n      const server = http__WEBPACK_IMPORTED_MODULE_2___default().createServer(app);\n      const io = await _socket_io_service_js__WEBPACK_IMPORTED_MODULE_9__.socketService.init(server);\n      app.use(express__WEBPACK_IMPORTED_MODULE_1___default()[\"static\"](path__WEBPACK_IMPORTED_MODULE_3___default().join(__dirname, \"../../public\"), {\n        dotfiles: \"deny\"\n      }));\n      app.use(express__WEBPACK_IMPORTED_MODULE_1___default().json());\n      app.use(cors__WEBPACK_IMPORTED_MODULE_0___default()());\n      app.use(express__WEBPACK_IMPORTED_MODULE_1___default().urlencoded({\n        extended: true\n      }));\n      app.use((req, res, next) => {\n        req.io = io;\n        return next();\n      });\n      app.use([...routes]);\n      app.use(_middlewares_errorHandler_middleware_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n      app.get(\"/activate-all\", (req, res) => {\n        (0,_tcpServer_test__WEBPACK_IMPORTED_MODULE_7__.sendBuzzerCommand)(_tcpServer_serverStart__WEBPACK_IMPORTED_MODULE_6__.connectedSockets);\n        console.log(_tcpServer_serverStart__WEBPACK_IMPORTED_MODULE_6__.connectedSockets.entries());\n        res.send(\"Buzzer command sent to all connected sockets\");\n        console.log(\"Buzzer send to all\");\n      });\n      const port = process.env.PORT || 3001;\n      server.listen(port);\n      (0,_utils_swagger_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(app, port);\n      console.log(\"[EXPRESS] Express service initialized\");\n      console.log(`[EXPRESS] Server listening on localhost:${port}`);\n    } catch (error) {\n      console.log(\"[EXPRESS] Error during express service initialization\");\n      throw error;\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (expressService);\n\n//# sourceURL=webpack://kronos/./src/services/express.service.js?");

/***/ }),

/***/ "./src/services/jwt.service.js":
/*!*************************************!*\
  !*** ./src/services/jwt.service.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n\nconst JwtService = {\n  jwtSignToken: (_payload, expTime) => {\n    try {\n      console.log(\"[JWT] Generating fastify JWT sign\");\n      const payload = JSON.parse(JSON.stringify(_payload));\n      return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign(payload, \"kronos\", {\n        expiresIn: expTime\n      });\n    } catch (error) {\n      console.error(\"[JWT] Error during fastify JWT sign\");\n      throw error;\n    }\n  },\n  jwtGetToken: request => {\n    try {\n      if (request.query.token) {\n        return request.query.token;\n      } else if (!request.headers.authorization || request.headers.authorization.split(\" \")[0] !== \"Bearer\") throw new Error(\"[JWT] JWT token not provided\");\n      return request.headers.authorization.split(\" \")[1];\n    } catch (error) {\n      console.error(\"[JWT] Error getting JWT token\");\n      throw error;\n    }\n  },\n  jwtVerifyToken: token => {\n    try {\n      return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, \"kronos\", (err, decoded) => {\n        if (err != null) throw err;\n        return decoded;\n      });\n    } catch (error) {\n      console.error(\"[JWT] Error getting JWT token\");\n      throw error;\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (JwtService);\n\n//# sourceURL=webpack://kronos/./src/services/jwt.service.js?");

/***/ }),

/***/ "./src/services/sequelize.service.js":
/*!*******************************************!*\
  !*** ./src/services/sequelize.service.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/database */ \"./src/config/database.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models */ \"./src/models/index.js\");\n\n\n\nconst models = [_models__WEBPACK_IMPORTED_MODULE_2__.Admin, _models__WEBPACK_IMPORTED_MODULE_2__.Card, _models__WEBPACK_IMPORTED_MODULE_2__.History, _models__WEBPACK_IMPORTED_MODULE_2__.Policy, _models__WEBPACK_IMPORTED_MODULE_2__.PolicyRfid, _models__WEBPACK_IMPORTED_MODULE_2__.Rfid, _models__WEBPACK_IMPORTED_MODULE_2__.Role, _models__WEBPACK_IMPORTED_MODULE_2__.RolePolicy, _models__WEBPACK_IMPORTED_MODULE_2__.RoleRfidPermission, _models__WEBPACK_IMPORTED_MODULE_2__.User];\nconst sequelizeService = {\n  init: async () => {\n    try {\n      let connection = new sequelize__WEBPACK_IMPORTED_MODULE_0__.Sequelize(_config_database__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n      /*\n      Loading models automatically\n      */\n      for (const model of models) {\n        model.init(connection);\n      }\n      models.map(async model => {\n        model.associate && (await model.associate(connection.models));\n      });\n      console.log(\"[SEQUELIZE] Database service initialized\");\n\n      // Добавляем функцию транзакции\n      sequelizeService.transaction = async () => {\n        return connection.transaction();\n      };\n    } catch (error) {\n      console.log(\"[SEQUELIZE] Error during database service initialization\");\n      throw error;\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sequelizeService);\n\n//# sourceURL=webpack://kronos/./src/services/sequelize.service.js?");

/***/ }),

/***/ "./src/services/socket.io.service.js":
/*!*******************************************!*\
  !*** ./src/services/socket.io.service.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ioInstance: () => (/* binding */ ioInstance),\n/* harmony export */   socketService: () => (/* binding */ socketService)\n/* harmony export */ });\n/* harmony import */ var socket_io__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io */ \"socket.io\");\n/* harmony import */ var socket_io__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(socket_io__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n\n\nlet ioInstance;\nconst socketService = {\n  init: async server => {\n    try {\n      const io = await socket_io__WEBPACK_IMPORTED_MODULE_0___default()(server, {\n        pingTimeout: 60000,\n        transports: [\"websocket\", \"polling\"],\n        cors: {\n          origin: \"*\"\n        }\n      });\n      io.on(\"connection\", async socket => {\n        socket.emit(\"connected\", {\n          message: \"You are connected to the socket server.\"\n        });\n        socket.on(\"disconnect\", async () => {\n          socket.emit(\"disconnected\", {\n            message: \"You are disconnected from the socket server.\"\n          });\n        });\n      });\n      console.log(\"[SOCKET.IO] SOCKET.IO service initialized\");\n      ioInstance = io;\n      return io;\n    } catch (error) {\n      console.log(\"[SOCKET.IO] Error during service initialization\");\n      throw error;\n    }\n  }\n};\n\n\n//# sourceURL=webpack://kronos/./src/services/socket.io.service.js?");

/***/ }),

/***/ "./src/services/tcpServer.service.js":
/*!*******************************************!*\
  !*** ./src/services/tcpServer.service.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _tcpServer_serverStart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tcpServer/serverStart */ \"./src/tcpServer/serverStart.js\");\n\nconst TCP_PORT = 7108;\nconst TCP_HOST = '0.0.0.0';\nconst tcpServerService = {\n  init: async () => {\n    try {\n      _tcpServer_serverStart__WEBPACK_IMPORTED_MODULE_0__.tcpServer.listen(TCP_PORT, TCP_HOST, () => {\n        console.log(`[TCPSERVER] Server listening on ${TCP_HOST}:${TCP_PORT}`);\n      });\n    } catch (error) {\n      console.log(\"[TCPSERVER] ERROR\");\n      throw error;\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tcpServerService);\n\n//# sourceURL=webpack://kronos/./src/services/tcpServer.service.js?");

/***/ }),

/***/ "./src/tcpServer/serverStart.js":
/*!**************************************!*\
  !*** ./src/tcpServer/serverStart.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectedSockets: () => (/* binding */ connectedSockets),\n/* harmony export */   tcpServer: () => (/* binding */ tcpServer)\n/* harmony export */ });\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! net */ \"net\");\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(net__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/constants/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_constants__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_socket_io_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/socket.io.service */ \"./src/services/socket.io.service.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/tcpServer/utils.js\");\n\n\n\n\nconst connectedSockets = new Map();\nconst tcpServer = net__WEBPACK_IMPORTED_MODULE_0___default().createServer(async socket => {\n  const rfid = await (0,_utils__WEBPACK_IMPORTED_MODULE_3__.checkReader)(socket.remoteAddress);\n  if (rfid === null) {\n    console.log(`Reader with ip address: ${socket.remoteAddress} not found in db, access denied`);\n    return;\n  }\n  console.log(`Reader connected with address: ${socket.remoteAddress}`);\n  connectedSockets.set(socket.remoteAddress, socket);\n  socket.write(_constants__WEBPACK_IMPORTED_MODULE_1__.newInitialCommand, () => {\n    console.log('Init command send to reader');\n  });\n  socket.on('data', async data => {\n    if (data.length >= 3 && data[0] === 0xFF && data[1] === 0x00 && data[2] === 0x06) {\n      // Проверяем, начинаются ли данные с FF 00 06\n      console.log(`Data received: ${data.toString('hex')}`);\n      const uid = data.slice(5, 9).toString('hex').toUpperCase(); // Извлекаем UID, предполагая, что он начинается с 5-го байта и занимает 4 байта\n      console.log(`Extracted card UID: ${uid}`);\n      let rfid = await (0,_utils__WEBPACK_IMPORTED_MODULE_3__.checkReader)(socket.remoteAddress);\n      if (rfid.mode === 'scanner') {\n        _services_socket_io_service__WEBPACK_IMPORTED_MODULE_2__.ioInstance.emit(\"card_uid\", uid);\n        connectedSockets.get(socket.remoteAddress).write(_constants__WEBPACK_IMPORTED_MODULE_1__.tcpBuzzerCommand, () => {\n          console.log('Card uid sent');\n        });\n        return;\n      }\n      if (await (0,_utils__WEBPACK_IMPORTED_MODULE_3__.checkCardAccess)(uid, socket.remoteAddress)) {\n        let command;\n        const targetSocket = connectedSockets.get(socket.remoteAddress);\n        await (0,_utils__WEBPACK_IMPORTED_MODULE_3__.recordEntry)(uid, rfid, true);\n        if (rfid.attendance === true) {\n          command = _constants__WEBPACK_IMPORTED_MODULE_1__.tcpBuzzerCommand;\n        }\n        if (rfid.direction === 'in') {\n          command = _constants__WEBPACK_IMPORTED_MODULE_1__.tcpOpenDoorCommand3s;\n        } else if (rfid.direction === 'out') {\n          command = _constants__WEBPACK_IMPORTED_MODULE_1__.tcpOpenDoorCommand3s;\n        }\n        switch (rfid.duration) {\n          case 3:\n            command = _constants__WEBPACK_IMPORTED_MODULE_1__.tcpOpenDoorCommand3s;\n            break;\n          case 5:\n            command = _constants__WEBPACK_IMPORTED_MODULE_1__.tcpOpenDoorCommand5s;\n            break;\n          case 8:\n            command = _constants__WEBPACK_IMPORTED_MODULE_1__.tcpOpenDoorCommand8s;\n            break;\n          default:\n            command = _constants__WEBPACK_IMPORTED_MODULE_1__.tcpOpenDoorCommand3s;\n        }\n        targetSocket.write(command, () => {\n          console.log('Activate All\" command sent');\n          console.log(command);\n        });\n      } else {\n        await (0,_utils__WEBPACK_IMPORTED_MODULE_3__.recordEntry)(uid, rfid, false);\n        console.log(\"Access denied\");\n      }\n    } else {\n      console.log(`Received data in invalid format: ${data.toString('hex')}`);\n    }\n  });\n  socket.on('error', err => {\n    if (err.code === 'ECONNRESET') {\n      console.error(\"Connection with RFID reader reset:\", err);\n      connectedSockets.delete(socket.remoteAddress);\n    } else {\n      console.error(\"Error on RFID reader socket:\", err);\n    }\n  });\n  socket.on('close', () => {\n    console.log('Reader disconnected', socket.remoteAddress);\n    connectedSockets.delete(socket.remoteAddress);\n  });\n});\n\n//# sourceURL=webpack://kronos/./src/tcpServer/serverStart.js?");

/***/ }),

/***/ "./src/tcpServer/test.js":
/*!*******************************!*\
  !*** ./src/tcpServer/test.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendBuzzerCommand: () => (/* binding */ sendBuzzerCommand)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./src/constants/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_constants__WEBPACK_IMPORTED_MODULE_0__);\nconst net = __webpack_require__(/*! net */ \"net\");\nconst {\n  Router\n} = __webpack_require__(/*! express */ \"express\");\n\nconst command = Buffer.from([0xFF, 0x00, 0x08, 0xD0, 0x0C, 0x02, 0x00, 0xC8, 0x00, 0x0A, 0x00, 0xB8]);\nconst serverAddress = '0.0.0.0';\nconst serverPort = 7108;\nconst tcpServer = net.createServer(async socket => {\n  socket.on('data', data => {\n    console.log('Data received from the server:', data.toString('hex'));\n    socket.write(command);\n  });\n});\nfunction sendBuzzerCommand(connectedSockets) {\n  for (const [socketId, targetSocket] of connectedSockets.entries()) {\n    targetSocket.write(_constants__WEBPACK_IMPORTED_MODULE_0__.tcpBuzzerCommand, err => {\n      if (err) {\n        console.error(`Error sending command to socket ${socketId}: ${err.message}`);\n      } else {\n        console.log(`Buzzer command sent to socket ${socketId}`);\n        console.log(`Command: ${command}`);\n      }\n    });\n  }\n}\n\n//# sourceURL=webpack://kronos/./src/tcpServer/test.js?");

/***/ }),

/***/ "./src/tcpServer/utils.js":
/*!********************************!*\
  !*** ./src/tcpServer/utils.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkCardAccess: () => (/* binding */ checkCardAccess),\n/* harmony export */   checkReader: () => (/* binding */ checkReader),\n/* harmony export */   checkReaderExists: () => (/* binding */ checkReaderExists),\n/* harmony export */   recordEntry: () => (/* binding */ recordEntry)\n/* harmony export */ });\n/* harmony import */ var _models_Card__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/Card */ \"./src/models/Card.js\");\n/* harmony import */ var _models_History__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/History */ \"./src/models/History.js\");\n/* harmony import */ var _models_Rfid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/Rfid */ \"./src/models/Rfid.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/User */ \"./src/models/User.js\");\n/* harmony import */ var _models_Role__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/Role */ \"./src/models/Role.js\");\n/* harmony import */ var _models_Policy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/Policy */ \"./src/models/Policy.js\");\n\n\n\n\n\n\nasync function recordEntry(card_uid, rfid, entered) {\n  const card = await _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n    where: {\n      card_uid: card_uid\n    }\n  });\n  const user = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n    where: {\n      card_uid: card.card_uid\n    }\n  });\n  const currentDate = new Date();\n  const gmtPlus5Time = new Date(currentDate.getTime() + 5 * 60 * 60 * 1000); // GMT+5\n  await _models_History__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    card_uid: card.card_uid,\n    card_label: card.label,\n    ip_address: rfid.ipAddress,\n    rfid_label: rfid.label,\n    mode: rfid.mode,\n    direction: rfid.direction,\n    attendance: rfid.attendance,\n    duration: rfid.duration,\n    name: user.name,\n    last_name: user.last_name,\n    middle_name: user.middle_name,\n    phone_number: user.phone_number,\n    email: user.email,\n    print_pass: user.print_pass,\n    entered: entered,\n    date: gmtPlus5Time.toISOString().substring(0, 10),\n    time: gmtPlus5Time.toISOString().substring(11, 19)\n  });\n}\nasync function checkReaderExists(ipAddress) {\n  try {\n    const rfid = await _models_Rfid__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n      where: {\n        ipAddress: ipAddress\n      }\n    });\n    if (!rfid) {\n      return {\n        exists: false,\n        rfid: null\n      };\n    }\n    return {\n      exists: true,\n      rfid: rfid\n    };\n  } catch (error) {\n    console.error(\"Error checking reader and access:\", error);\n    return {\n      exists: false,\n      rfid: null\n    };\n  }\n}\nasync function checkReader(ipAddress) {\n  try {\n    return await _models_Rfid__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n      where: {\n        ipAddress: ipAddress\n      }\n    });\n  } catch (error) {\n    console.error(\"Error checking reader and access:\", error);\n    return null;\n  }\n}\nasync function checkCardAccess(card_uid, remote_address) {\n  try {\n    var _cards$role$policies;\n    const cards = await _models_User__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n      include: [{\n        model: _models_Card__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        as: 'card',\n        where: {\n          card_uid\n        }\n      }, {\n        model: _models_Role__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        as: 'role',\n        include: [{\n          model: _models_Policy__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n          as: 'policies',\n          include: ['rfids']\n        }, 'separate_access_rfids']\n      }]\n    });\n    if (!cards || !cards.role) {\n      console.log(`Card with UID ${card_uid} not found`);\n      return false;\n    }\n    const allIpAddresses = new Set([...cards.role.separate_access_rfids.map(rfid => rfid.dataValues.ipAddress), ...(((_cards$role$policies = cards.role.policies) === null || _cards$role$policies === void 0 ? void 0 : _cards$role$policies.length) > 0 ? cards.role.policies.flatMap(policy => policy.dataValues.rfids.map(rfid => rfid.ipAddress)) : [])]);\n    if (allIpAddresses.has(remote_address)) {\n      console.log(`Access granted to ${card_uid}`);\n      return true;\n    } else {\n      console.log(`Access denied to ${card_uid}`);\n      return false;\n    }\n  } catch (error) {\n    console.error(\"Error checking card access:\", error);\n    return false;\n  }\n}\n\n//# sourceURL=webpack://kronos/./src/tcpServer/utils.js?");

/***/ }),

/***/ "./src/utils/ApiError.js":
/*!*******************************!*\
  !*** ./src/utils/ApiError.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: () => (/* binding */ BadRequestError),\n/* harmony export */   BadTokenError: () => (/* binding */ BadTokenError),\n/* harmony export */   ForbiddenError: () => (/* binding */ ForbiddenError),\n/* harmony export */   InternalServerError: () => (/* binding */ InternalServerError),\n/* harmony export */   IsApiError: () => (/* binding */ IsApiError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   TokenExpiredError: () => (/* binding */ TokenExpiredError),\n/* harmony export */   UnauthorizedError: () => (/* binding */ UnauthorizedError),\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError)\n/* harmony export */ });\nconst DEFAULT_ERRORS = {\n  BAD_TOKEN: {\n    code: \"BAD_TOKEN\",\n    message: {\n      en: \"Token is not valid\",\n      ru: \"Токен не действителен\"\n    }\n  },\n  TOKEN_EXPIRED: {\n    code: \"TOKEN_EXPIRED\",\n    message: {\n      en: \"Token expired\",\n      ru: \"Токен истек\"\n    }\n  },\n  UNAUTHORIZED: {\n    code: \"UNAUTHORIZED\",\n    message: {\n      en: \"Invalid credentials\",\n      ru: \"Неверные учетные данные\"\n    }\n  },\n  SERVER_ERROR: {\n    code: \"SERVER_ERROR\",\n    message: {\n      en: \"Internal server error\",\n      ru: \"Внутренняя ошибка сервера\"\n    }\n  },\n  NOT_FOUND: {\n    code: \"NOT_FOUND\",\n    message: {\n      en: \"Not found\",\n      ru: \"Не найдено\"\n    }\n  },\n  BAD_REQUEST: {\n    code: \"BAD_REQUEST\",\n    message: {\n      en: \"Bad request\",\n      ru: \"Неверный запрос\"\n    }\n  },\n  QUIZ_NOT_FOUND: {\n    code: \"QUIZ_NOT_FOUND\",\n    message: {\n      en: \"Quiz not found\",\n      ru: \"Тест не найден\"\n    }\n  },\n  FORBIDDEN: {\n    code: \"FORBIDDEN\",\n    message: {\n      en: \"Permission denied\",\n      ru: \"Доступ запрещен\"\n    }\n  },\n  VALIDATION: {\n    code: \"VALIDATION\",\n    message: {\n      en: \"Validation error\",\n      ru: \"Ошибка валидации\"\n    }\n  }\n};\n\n/**\n * @class BaseError\n * @param {number} statusCode - HTTP status code\n * @param {boolean} isOperational - Is this error operational\n * @param {string} message - Error message\n * @param {string} type - Error type\n */\nclass BaseError extends Error {\n  constructor(message, statusCode, type, isOperational) {\n    console.log(message);\n    super(JSON.stringify(message));\n    this.type = type;\n    this.statusCode = statusCode;\n    this.isOperational = isOperational;\n  }\n}\n\n/**\n * @class ApiError\n */\nclass ApiError extends BaseError {\n  constructor(message, statusCode, type) {\n    super(message, statusCode, type, true);\n  }\n}\n/**\n * Check if error is an api specific error\n * @param {Error} err - Error object\n * @returns {boolean} - Is this error an ApiError\n */\nconst IsApiError = err => err instanceof ApiError ? err.isOperational : false;\nclass NotFoundError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.NOT_FOUND.message, type = DEFAULT_ERRORS.NOT_FOUND.code) {\n    super(message, 404, type);\n  }\n}\nclass BadRequestError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.BAD_REQUEST.message, type = DEFAULT_ERRORS.BAD_REQUEST.code) {\n    super(message, 400, type);\n  }\n}\nclass ValidationError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.VALIDATION.message, type = DEFAULT_ERRORS.VALIDATION.code) {\n    super(message, 400, type);\n  }\n}\nclass UnauthorizedError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.UNAUTHORIZED.message, type = DEFAULT_ERRORS.UNAUTHORIZED.code) {\n    super(message, 401, type);\n  }\n}\nclass ForbiddenError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.FORBIDDEN.message, type = DEFAULT_ERRORS.FORBIDDEN.code) {\n    super(message, 403, type);\n  }\n}\nclass InternalServerError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.SERVER_ERROR.message, type = DEFAULT_ERRORS.SERVER_ERROR.code) {\n    super(message, 500, type);\n  }\n}\nclass BadTokenError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.BAD_TOKEN.message, type = DEFAULT_ERRORS.BAD_TOKEN.code) {\n    super(message, 401, type);\n  }\n}\nclass TokenExpiredError extends ApiError {\n  constructor(message = DEFAULT_ERRORS.TOKEN_EXPIRED.message, type = DEFAULT_ERRORS.TOKEN_EXPIRED.code) {\n    super(message, 401, type);\n  }\n}\n\n//# sourceURL=webpack://kronos/./src/utils/ApiError.js?");

/***/ }),

/***/ "./src/utils/swagger.js":
/*!******************************!*\
  !*** ./src/utils/swagger.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var swagger_jsdoc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! swagger-jsdoc */ \"swagger-jsdoc\");\n/* harmony import */ var swagger_jsdoc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(swagger_jsdoc__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var swagger_ui_express__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! swagger-ui-express */ \"swagger-ui-express\");\n/* harmony import */ var swagger_ui_express__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(swagger_ui_express__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./swaggerSchemas */ \"./src/utils/swaggerSchemas.js\");\n\n\n\nconst options = {\n  definition: {\n    openapi: '3.0.0',\n    info: {\n      title: 'Kronos API',\n      description: \"API endpoints for a Kronos services documented on swagger\",\n      version: '1.0.0'\n    },\n    servers: [{\n      url: \"http://localhost:3001/\",\n      description: \"Local server\"\n    }],\n    components: {\n      schemas: {\n        refreshTokenSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.refreshTokenSchema,\n        refreshTokenResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.refreshTokenResponseSchema,\n        adminLoginSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.adminLoginSchema,\n        adminLoginResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.adminLoginResponseSchema,\n        CardPostSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.CardPostSchema,\n        CardPostResponse: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.CardPostResponse,\n        getCardResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getCardResponseSchema,\n        getCardsResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getCardsResponseSchema,\n        getHistoryResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getHistoryResponseSchema,\n        createPolicySchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createPolicySchema,\n        createPolicyResponse: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createPolicyResponse,\n        getPolicyResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getPolicyResponseSchema,\n        getPoliciesResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getPoliciesResponseSchema,\n        createReaderSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createReaderSchema,\n        createReaderResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createReaderResponseSchema,\n        getReadersResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getReadersResponseSchema,\n        getReaderResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getReaderResponseSchema,\n        createUserSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createUserSchema,\n        createUserResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createUserResponseSchema,\n        getUsersResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getUsersResponseSchema,\n        getUserResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getUserResponseSchema,\n        createRoleSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createRoleSchema,\n        createRoleResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.createRoleResponseSchema,\n        getRolesResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getRolesResponseSchema,\n        getRoleResponseSchema: _swaggerSchemas__WEBPACK_IMPORTED_MODULE_2__.getRoleResponseSchema\n      }\n    }\n  },\n  // looks for configuration in specified directories\n  apis: ['src/routes/*.js']\n};\nconst swaggerSpec = swagger_jsdoc__WEBPACK_IMPORTED_MODULE_0___default()(options);\nfunction swaggerDocs(app, port) {\n  // Swagger Page\n  app.use('/api-docs', (swagger_ui_express__WEBPACK_IMPORTED_MODULE_1___default().serve), swagger_ui_express__WEBPACK_IMPORTED_MODULE_1___default().setup(swaggerSpec));\n  // Documentation in JSON format\n  app.get('/api-docs.json', (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n    res.send(swaggerSpec);\n  });\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (swaggerDocs);\n\n//# sourceURL=webpack://kronos/./src/utils/swagger.js?");

/***/ }),

/***/ "./src/utils/swaggerSchemas.js":
/*!*************************************!*\
  !*** ./src/utils/swaggerSchemas.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardPostResponse: () => (/* binding */ CardPostResponse),\n/* harmony export */   CardPostSchema: () => (/* binding */ CardPostSchema),\n/* harmony export */   adminLoginResponseSchema: () => (/* binding */ adminLoginResponseSchema),\n/* harmony export */   adminLoginSchema: () => (/* binding */ adminLoginSchema),\n/* harmony export */   createPolicyResponse: () => (/* binding */ createPolicyResponse),\n/* harmony export */   createPolicySchema: () => (/* binding */ createPolicySchema),\n/* harmony export */   createReaderResponseSchema: () => (/* binding */ createReaderResponseSchema),\n/* harmony export */   createReaderSchema: () => (/* binding */ createReaderSchema),\n/* harmony export */   createRoleResponseSchema: () => (/* binding */ createRoleResponseSchema),\n/* harmony export */   createRoleSchema: () => (/* binding */ createRoleSchema),\n/* harmony export */   createUserResponseSchema: () => (/* binding */ createUserResponseSchema),\n/* harmony export */   createUserSchema: () => (/* binding */ createUserSchema),\n/* harmony export */   getCardResponseSchema: () => (/* binding */ getCardResponseSchema),\n/* harmony export */   getCardsResponseSchema: () => (/* binding */ getCardsResponseSchema),\n/* harmony export */   getHistoryResponseSchema: () => (/* binding */ getHistoryResponseSchema),\n/* harmony export */   getPoliciesResponseSchema: () => (/* binding */ getPoliciesResponseSchema),\n/* harmony export */   getPolicyResponseSchema: () => (/* binding */ getPolicyResponseSchema),\n/* harmony export */   getReaderResponseSchema: () => (/* binding */ getReaderResponseSchema),\n/* harmony export */   getReadersResponseSchema: () => (/* binding */ getReadersResponseSchema),\n/* harmony export */   getRoleResponseSchema: () => (/* binding */ getRoleResponseSchema),\n/* harmony export */   getRolesResponseSchema: () => (/* binding */ getRolesResponseSchema),\n/* harmony export */   getUserResponseSchema: () => (/* binding */ getUserResponseSchema),\n/* harmony export */   getUsersResponseSchema: () => (/* binding */ getUsersResponseSchema),\n/* harmony export */   refreshTokenResponseSchema: () => (/* binding */ refreshTokenResponseSchema),\n/* harmony export */   refreshTokenSchema: () => (/* binding */ refreshTokenSchema)\n/* harmony export */ });\nconst refreshTokenSchema = {\n  type: 'object',\n  required: ['refreshToken'],\n  properties: {\n    refreshToken: {\n      type: 'string',\n      description: 'Existing refresh token of admin.'\n    }\n  }\n};\nconst refreshTokenResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Admin information and access and refresh tokens.',\n      properties: {\n        admin: {\n          type: 'object',\n          description: 'Admin general information',\n          properties: {\n            id: {\n              type: 'string',\n              format: 'uuid',\n              description: 'Unique identifier of the admin.'\n            },\n            name: {\n              type: 'string',\n              description: 'Name of the admin.'\n            },\n            login: {\n              type: 'string',\n              description: 'Unique username for the admin.'\n            }\n          }\n        },\n        accessToken: {\n          type: 'string',\n          description: 'Access token for admin with TTL of 10 minutes'\n        },\n        refreshToken: {\n          type: 'string',\n          description: 'Refresh token for admin with TTL of 1 day.'\n        }\n      }\n    }\n  }\n};\nconst adminLoginSchema = {\n  type: 'object',\n  required: ['login', 'password'],\n  properties: {\n    login: {\n      type: 'string',\n      description: 'Login (username) of admin.'\n    },\n    password: {\n      type: 'string',\n      description: 'Password of admin.'\n    }\n  }\n};\nconst adminLoginResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Admin information and access and refresh tokens.',\n      properties: {\n        admin: {\n          type: 'object',\n          description: 'Admin general information',\n          properties: {\n            id: {\n              type: 'string',\n              format: 'uuid',\n              description: 'Unique identifier of the admin.'\n            },\n            name: {\n              type: 'string',\n              description: 'Name of the admin.'\n            },\n            login: {\n              type: 'string',\n              description: 'Unique username for the admin.'\n            }\n          }\n        },\n        accessToken: {\n          type: 'string',\n          description: 'Access token for admin with TTL of 10 minutes'\n        },\n        refreshToken: {\n          type: 'string',\n          description: 'Refresh token for admin with TTL of 1 day.'\n        }\n      }\n    }\n  }\n};\nconst CardPostSchema = {\n  type: 'object',\n  required: ['card_uid', 'label', 'policies'],\n  properties: {\n    card_uid: {\n      type: 'string',\n      description: 'Card ID that is used by reader.'\n    },\n    label: {\n      type: 'string',\n      description: 'Label or name for the card.'\n    }\n  }\n};\nconst CardPostResponse = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Card details created.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the card.'\n        },\n        label: {\n          type: 'string',\n          description: 'Label or name of the car.'\n        },\n        card_uid: {\n          type: 'string',\n          description: 'Card ID provided during creation.'\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the card\\'s last update.'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the card\\'s creation.'\n        }\n      }\n    }\n  }\n};\nconst getCardResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Details of the retrieved card.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the card.'\n        },\n        card_uid: {\n          type: 'string',\n          description: 'Card ID provided during creation.'\n        },\n        label: {\n          type: 'string',\n          description: 'Label or name for the card (can be null).',\n          nullable: true // Optional property (can be null)\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the card\\'s creation.'\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the card\\'s last update.'\n        },\n        deletedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the card\\'s deletion (null if not deleted).',\n          nullable: true // Optional property (can be null)\n        }\n      }\n    }\n  }\n};\nconst getCardsResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'array',\n      description: 'List of retrieved cards.',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'Unique identifier of the card.'\n          },\n          card_uid: {\n            type: 'string',\n            description: 'Card ID provided during creation.'\n          },\n          label: {\n            type: 'string',\n            description: 'Label or name for the card (can be null).',\n            nullable: true // Optional property (can be null)\n          },\n          createdAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the card\\'s creation.'\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the card\\'s last update.'\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the card\\'s deletion (null if not deleted).',\n            nullable: true // Optional property (can be null)\n          }\n        }\n      }\n    },\n    pagination: {\n      type: 'object',\n      description: 'Pagination information for the response.',\n      properties: {\n        current_page: {\n          type: 'integer',\n          description: 'The current page number in the paginated response.'\n        },\n        total_pages: {\n          type: 'integer',\n          description: 'The total number of pages available in the dataset.'\n        },\n        next_page: {\n          type: 'integer',\n          description: 'The URL or page number for the next page (if available).',\n          nullable: true // Optional property (can be null)\n        },\n        previous_page: {\n          type: 'integer',\n          description: 'The URL or page number for the previous page (if available).',\n          nullable: true // Optional property (can be null)\n        }\n      }\n    }\n  }\n};\nconst getHistoryResponseSchema = {\n  type: 'object',\n  properties: {\n    data: {\n      type: 'array',\n      description: 'List of RFID access logs.',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'Unique identifier of the access log entry.'\n          },\n          date: {\n            type: 'string',\n            description: 'Date of the access event (YYYY-MM-DD).'\n          },\n          time: {\n            type: 'string',\n            description: 'Time of the access event (HH:MM:SS).'\n          },\n          entered: {\n            type: 'boolean',\n            description: 'Entering status of user(true or false)'\n          },\n          Card: {\n            type: 'object',\n            description: 'Details of the associated card.',\n            properties: {\n              card_uid: {\n                type: 'string',\n                description: 'ID of the card provided during creation.'\n              },\n              label: {\n                type: 'string',\n                description: 'Label or name for the card (can be null).'\n              }\n            }\n          },\n          Rfid: {\n            type: 'object',\n            description: 'Details of the associated RFID tag.',\n            properties: {\n              ip_address: {\n                type: 'string',\n                description: 'IP address of the RFID tag reader.'\n              },\n              label: {\n                type: 'string',\n                description: 'Label of the RFID tag.'\n              },\n              mode: {\n                type: 'string',\n                description: 'Mode of the RFID tag (e.g., auto).'\n              },\n              direction: {\n                type: 'string',\n                description: 'Direction of access (e.g., in, out).'\n              },\n              attendance: {\n                type: 'boolean',\n                description: 'Indicates if the access is related to attendance.'\n              }\n            }\n          },\n          User: {\n            type: 'object',\n            description: 'Details of the associated User.',\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the User'\n              },\n              last_name: {\n                type: 'string',\n                description: 'Last name of the User'\n              },\n              middle_name: {\n                type: 'string',\n                description: 'Middle name of the User'\n              },\n              phone_number: {\n                type: 'string',\n                description: 'Phone number of the User'\n              },\n              email: {\n                type: 'string',\n                description: 'Email of the User'\n              },\n              print_pass: {\n                type: 'string',\n                description: \"Print pass\"\n              }\n            }\n          }\n        }\n      }\n    },\n    pagination: {\n      type: 'object',\n      description: 'Pagination information for the response.',\n      properties: {\n        current_page: {\n          type: 'integer',\n          description: 'The current page number in the paginated response.'\n        },\n        total_pages: {\n          type: 'integer',\n          description: 'The total number of pages available in the dataset.'\n        },\n        next_page: {\n          type: 'integer',\n          description: 'The URL or page number for the next page (if available).',\n          nullable: true // Optional property (can be null)\n        },\n        previous_page: {\n          type: 'integer',\n          description: 'The URL or page number for the previous page (if available).',\n          nullable: true // Optional property (can be null)\n        }\n      }\n    }\n  }\n};\nconst createPolicySchema = {\n  type: 'object',\n  required: ['label', 'rfids'],\n  properties: {\n    label: {\n      type: 'string',\n      description: 'Name or label for the policy.'\n    },\n    rfids: {\n      type: 'array',\n      description: 'List of RFID reader IDs associated with the policy.',\n      items: {\n        type: 'string',\n        format: 'uuid'\n      }\n    }\n  }\n};\nconst createPolicyResponse = {\n  status: true,\n  message: \"Policy created successfully\",\n  data: {\n    id: \"15cc4e86-cfe1-408d-90d1-388aafbcd27e\",\n    label: \"test localhost2\",\n    updatedAt: \"2024-03-06T06:57:55.604Z\",\n    createdAt: \"2024-03-06T06:57:55.605Z\"\n  }\n};\nconst getPolicyResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Details of the retrieved policy.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the policy.'\n        },\n        label: {\n          type: 'string',\n          description: 'Label for the policy.'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the policy\\'s creation (UTC).'\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the policy\\'s last update (UTC).'\n        },\n        deletedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the policy\\'s deletion (null if not deleted).',\n          nullable: true // Optional property (can be null)\n        },\n        rfids: {\n          type: 'array',\n          description: 'List of associated RFID tags with the policy.',\n          items: {\n            type: 'object',\n            properties: {\n              id: {\n                type: 'string',\n                format: 'uuid',\n                description: 'Unique identifier of the RFID tag.'\n              },\n              ipAddress: {\n                type: 'string',\n                description: 'IP address of the RFID tag reader.'\n              },\n              label: {\n                type: 'string',\n                description: 'Label of the RFID tag (can be null).',\n                nullable: true // Optional property (can be null)\n              },\n              mode: {\n                type: 'string',\n                description: 'Mode of the RFID tag (e.g., auto).'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nconst getPoliciesResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'array',\n      description: 'List of retrieved policies.',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'Unique identifier of the policy.'\n          },\n          label: {\n            type: 'string',\n            description: 'Label for the policy.'\n          },\n          createdAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the policy\\'s creation (UTC).'\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the policy\\'s last update (UTC).'\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the policy\\'s deletion (null if not deleted).',\n            nullable: true\n          },\n          rfids: {\n            type: 'array',\n            description: 'List of associated RFID tags with the policy.',\n            items: {\n              type: 'object',\n              properties: {\n                id: {\n                  type: 'string',\n                  format: 'uuid',\n                  description: 'Unique identifier of the RFID tag.'\n                },\n                ipAddress: {\n                  type: 'string',\n                  description: 'IP address of the RFID tag reader.'\n                },\n                label: {\n                  type: 'string',\n                  description: 'Label of the RFID tag (can be null).',\n                  nullable: true\n                },\n                mode: {\n                  type: 'string',\n                  description: 'Mode of the RFID tag (e.g., auto).'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    pagination: {\n      type: 'object',\n      description: 'Pagination information for the response.',\n      properties: {\n        current_page: {\n          type: 'integer',\n          description: 'The current page number in the paginated response.'\n        },\n        total_pages: {\n          type: 'integer',\n          description: 'The total number of pages available in the dataset.'\n        },\n        next_page: {\n          type: 'integer',\n          description: 'The URL or page number for the next page (if available).',\n          nullable: true // Optional property (can be null)\n        },\n        previous_page: {\n          type: 'integer',\n          description: 'The URL or page number for the previous page (if available).',\n          nullable: true // Optional property (can be null)\n        }\n      }\n    }\n  }\n};\nconst createReaderSchema = {\n  type: 'object',\n  required: ['ipAddress', 'label', 'mode'],\n  properties: {\n    ipAddress: {\n      type: 'string',\n      description: 'Ip address of RFID reader'\n    },\n    label: {\n      type: 'string',\n      description: 'Label or name of reader'\n    },\n    mode: {\n      type: 'string',\n      description: 'Functioning mode (scanner for admin, auto for opening doors)',\n      enum: ['auto', 'scanner']\n    },\n    direction: {\n      type: 'string',\n      description: 'Direction of door opening (accepts in or out)',\n      default: 'in',\n      enum: ['in', 'out']\n    },\n    attendance: {\n      type: 'boolean',\n      description: 'If true, attendance will be checked, if false not be checked',\n      default: false\n    },\n    duration: {\n      type: 'integer',\n      description: 'Duration of door opening command in seconds (accepts 3, 5, or 8)',\n      default: 3,\n      enum: [3, 5, 8]\n    }\n  }\n};\nconst createReaderResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'string',\n      description: 'Message indicating the outcome of the operation.'\n    },\n    data: {\n      type: 'object',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the created RFID reader.'\n        },\n        ipAddress: {\n          type: 'string',\n          description: 'Ip address of RFID reader'\n        },\n        label: {\n          type: 'string',\n          description: 'Label or name of reader'\n        },\n        mode: {\n          type: 'string',\n          description: 'Functioning mode (scanner for admin, auto for opening doors)',\n          enum: ['auto', 'scanner']\n        },\n        direction: {\n          type: 'string',\n          description: 'Direction of door opening (accepts in or out)',\n          default: 'in',\n          enum: ['in', 'out']\n        },\n        attendance: {\n          type: 'boolean',\n          description: 'If true, attendance will be checked, if false not be checked',\n          default: false\n        },\n        duration: {\n          type: 'integer',\n          description: 'Duration of door opening command in seconds (accepts 3, 5, or 8)',\n          default: 3,\n          enum: [3, 5, 8]\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the reader\\'s last update (UTC).'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the reader\\'s creation (UTC).'\n        }\n      }\n    }\n  }\n};\nconst getReadersResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'array',\n      description: 'List of retrieved rfids.',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'Unique identifier of the created RFID reader.'\n          },\n          ipAddress: {\n            type: 'string',\n            description: 'Ip address of RFID reader'\n          },\n          label: {\n            type: 'string',\n            description: 'Label or name of reader'\n          },\n          mode: {\n            type: 'string',\n            description: 'Functioning mode (scanner for admin, auto for opening doors)',\n            enum: ['auto', 'scanner']\n          },\n          direction: {\n            type: 'string',\n            description: 'Direction of door opening (accepts in or out)',\n            default: 'in',\n            enum: ['in', 'out']\n          },\n          attendance: {\n            type: 'boolean',\n            description: 'If true, attendance will be checked, if false not be checked',\n            default: false\n          },\n          duration: {\n            type: 'integer',\n            description: 'Duration of door opening command in seconds (accepts 3, 5, or 8)',\n            default: 3,\n            enum: [3, 5, 8]\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the reader\\'s last update (UTC).'\n          },\n          createdAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the reader\\'s creation (UTC).'\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the reader\\'s deletion (null if not deleted).',\n            nullable: true\n          }\n        }\n      }\n    },\n    pagination: {\n      type: 'object',\n      description: 'Pagination information for the response.',\n      properties: {\n        current_page: {\n          type: 'integer',\n          description: 'The current page number in the paginated response.'\n        },\n        total_pages: {\n          type: 'integer',\n          description: 'The total number of pages available in the dataset.'\n        },\n        next_page: {\n          type: 'integer',\n          description: 'The URL or page number for the next page (if available).',\n          nullable: true // Optional property (can be null)\n        },\n        previous_page: {\n          type: 'integer',\n          description: 'The URL or page number for the previous page (if available).',\n          nullable: true // Optional property (can be null)\n        }\n      }\n    }\n  }\n};\nconst getReaderResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Retrieved Rfid details.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the created RFID reader.'\n        },\n        ipAddress: {\n          type: 'string',\n          description: 'Ip address of RFID reader'\n        },\n        label: {\n          type: 'string',\n          description: 'Label or name of reader'\n        },\n        mode: {\n          type: 'string',\n          description: 'Functioning mode (scanner for admin, auto for opening doors)',\n          enum: ['auto', 'scanner']\n        },\n        direction: {\n          type: 'string',\n          description: 'Direction of door opening (accepts in or out)',\n          default: 'in',\n          enum: ['in', 'out']\n        },\n        attendance: {\n          type: 'boolean',\n          description: 'If true, attendance will be checked, if false not be checked',\n          default: false\n        },\n        duration: {\n          type: 'integer',\n          description: 'Duration of door opening command in seconds (accepts 3, 5, or 8)',\n          default: 3,\n          enum: [3, 5, 8]\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the reader\\'s last update (UTC).'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the reader\\'s creation (UTC).'\n        },\n        deletedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the reader\\'s deletion (null if not deleted).',\n          nullable: true\n        }\n      }\n    }\n  }\n};\nconst createUserSchema = {\n  type: 'object',\n  required: ['name', 'last_name', 'middle_name', 'phone_number', 'email', 'print_pass', 'card_id', 'role_id'],\n  properties: {\n    name: {\n      type: 'string',\n      description: 'User\\'s name.'\n    },\n    last_name: {\n      type: 'string',\n      description: 'User\\'s last name.'\n    },\n    middle_name: {\n      type: 'string',\n      description: 'User\\'s middle name.'\n    },\n    phone_number: {\n      type: 'string',\n      description: 'User\\'s phone number.'\n    },\n    email: {\n      type: 'string',\n      description: 'User\\'s email.'\n    },\n    print_pass: {\n      type: 'string',\n      description: 'User\\'s print pass.'\n    },\n    card_id: {\n      type: 'string',\n      description: 'ID of the card.'\n    },\n    role_id: {\n      type: 'string',\n      description: 'ID of the user\\'s role.'\n    }\n  }\n};\nconst createUserResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Details of the retrieved user.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the user.'\n        },\n        name: {\n          type: 'string',\n          description: 'User\\'s name.'\n        },\n        last_name: {\n          type: 'string',\n          description: 'User\\'s last name.'\n        },\n        middle_name: {\n          type: 'string',\n          description: 'User\\'s middle name.'\n        },\n        phone_number: {\n          type: 'string',\n          description: 'User\\'s phone number.'\n        },\n        email: {\n          type: 'string',\n          description: 'User\\'s email.'\n        },\n        print_pass: {\n          type: 'string',\n          description: 'User\\'s print pass.'\n        },\n        card_id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'ID of the card associated with the user.'\n        },\n        role_id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'ID of the role associated with the user.'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the user\\'s creation (UTC).'\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the user\\'s last update (UTC).'\n        },\n        deletedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the user\\'s deletion (null if not deleted).',\n          nullable: true\n        },\n        card: {\n          type: 'object',\n          description: 'Details of the associated card.',\n          properties: {\n            id: {\n              type: 'string',\n              format: 'uuid',\n              description: 'Unique identifier of the card.'\n            },\n            card_uid: {\n              type: 'string',\n              description: 'Unique identifier of the card.'\n            },\n            label: {\n              type: 'string',\n              description: 'Label of the card.'\n            },\n            createdAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the card\\'s creation (UTC).'\n            },\n            updatedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the card\\'s last update (UTC).'\n            },\n            deletedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the card\\'s deletion (null if not deleted).',\n              nullable: true\n            }\n          }\n        },\n        role: {\n          type: 'object',\n          description: 'Details of the associated role.',\n          properties: {\n            id: {\n              type: 'string',\n              format: 'uuid',\n              description: 'Unique identifier of the role.'\n            },\n            label: {\n              type: 'string',\n              description: 'Label of the role.'\n            },\n            createdAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the role\\'s creation (UTC).'\n            },\n            updatedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the role\\'s last update (UTC).'\n            },\n            deletedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the role\\'s deletion (null if not deleted).',\n              nullable: true\n            }\n          }\n        }\n      }\n    }\n  }\n};\nconst getUsersResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'array',\n      description: 'List of retrieved users.',\n      items: {\n        type: 'object',\n        description: 'Details of a user.',\n        properties: {\n          id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'Unique identifier of the user.'\n          },\n          name: {\n            type: 'string',\n            description: 'User\\'s name.'\n          },\n          last_name: {\n            type: 'string',\n            description: 'User\\'s last name.'\n          },\n          middle_name: {\n            type: 'string',\n            description: 'User\\'s middle name.'\n          },\n          phone_number: {\n            type: 'string',\n            description: 'User\\'s phone number.'\n          },\n          card_id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'ID of the card associated with the user.'\n          },\n          role_id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'ID of the role associated with the user.'\n          },\n          email: {\n            type: 'string',\n            description: 'User\\'s email.'\n          },\n          print_pass: {\n            type: 'string',\n            description: 'User\\'s print pass.'\n          },\n          createdAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the user\\'s creation (UTC).'\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the user\\'s last update (UTC).'\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the user\\'s deletion (null if not deleted).',\n            nullable: true\n          },\n          card: {\n            type: 'object',\n            description: 'Details of the associated card.',\n            properties: {\n              id: {\n                type: 'string',\n                format: 'uuid',\n                description: 'Unique identifier of the card.'\n              },\n              card_uid: {\n                type: 'string',\n                description: 'Unique identifier of the card.'\n              },\n              label: {\n                type: 'string',\n                description: 'Label of the card.'\n              },\n              createdAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the card\\'s creation (UTC).'\n              },\n              updatedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the card\\'s last update (UTC).'\n              },\n              deletedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the card\\'s deletion (null if not deleted).',\n                nullable: true\n              }\n            }\n          },\n          role: {\n            type: 'object',\n            description: 'Details of the associated role.',\n            properties: {\n              id: {\n                type: 'string',\n                format: 'uuid',\n                description: 'Unique identifier of the role.'\n              },\n              label: {\n                type: 'string',\n                description: 'Label of the role.'\n              },\n              createdAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the role\\'s creation (UTC).'\n              },\n              updatedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the role\\'s last update (UTC).'\n              },\n              deletedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the role\\'s deletion (null if not deleted).',\n                nullable: true\n              }\n            }\n          }\n        }\n      }\n    },\n    pagination: {\n      type: 'object',\n      description: 'Pagination information for the response.',\n      properties: {\n        current_page: {\n          type: 'integer',\n          description: 'The current page number in the paginated response.'\n        },\n        total_pages: {\n          type: 'integer',\n          description: 'The total number of pages available in the dataset.'\n        },\n        next_page: {\n          type: 'integer',\n          description: 'The URL or page number for the next page (if available).',\n          nullable: true // Optional property (can be null)\n        },\n        previous_page: {\n          type: 'integer',\n          description: 'The URL or page number for the previous page (if available).',\n          nullable: true // Optional property (can be null)\n        }\n      }\n    }\n  }\n};\nconst getUserResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Details of the retrieved user.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the user.'\n        },\n        name: {\n          type: 'string',\n          description: 'User\\'s name.'\n        },\n        lcreateUserSchemaast_name: {\n          type: 'string',\n          description: 'User\\'s last name.'\n        },\n        middle_name: {\n          type: 'string',\n          description: 'User\\'s middle name.'\n        },\n        phone_number: {\n          type: 'string',\n          description: 'User\\'s phone number.'\n        },\n        email: {\n          type: 'string',\n          description: 'User\\'s email.'\n        },\n        print_pass: {\n          type: 'string',\n          description: 'User\\'s print pass.'\n        },\n        card_id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'ID of the card associated with the user.'\n        },\n        role_id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'ID of the role associated with the user.'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the user\\'s creation (UTC).'\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the user\\'s last update (UTC).'\n        },\n        deletedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the user\\'s deletion (null if not deleted).',\n          nullable: true\n        },\n        card: {\n          type: 'object',\n          description: 'Details of the associated card.',\n          properties: {\n            id: {\n              type: 'string',\n              format: 'uuid',\n              description: 'Unique identifier of the card.'\n            },\n            card_uid: {\n              type: 'string',\n              description: 'Unique identifier of the card.'\n            },\n            label: {\n              type: 'string',\n              description: 'Label of the card.'\n            },\n            createdAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the card\\'s creation (UTC).'\n            },\n            updatedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the card\\'s last update (UTC).'\n            },\n            deletedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the card\\'s deletion (null if not deleted).',\n              nullable: true\n            }\n          }\n        },\n        role: {\n          type: 'object',\n          description: 'Details of the associated role.',\n          properties: {\n            id: {\n              type: 'string',\n              format: 'uuid',\n              description: 'Unique identifier of the role.'\n            },\n            label: {\n              type: 'string',\n              description: 'Label of the role.'\n            },\n            createdAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the role\\'s creation (UTC).'\n            },\n            updatedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the role\\'s last update (UTC).'\n            },\n            deletedAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Timestamp of the role\\'s deletion (null if not deleted).',\n              nullable: true\n            }\n          }\n        }\n      }\n    }\n  }\n};\nconst createRoleSchema = {\n  type: 'object',\n  required: ['label', 'policies', 'separate_access_rfids'],\n  properties: {\n    label: {\n      type: 'string',\n      description: 'Label of the role.'\n    },\n    policies: {\n      type: 'array',\n      description: 'Array of policy IDs associated with the role.',\n      items: {\n        type: 'string',\n        format: 'uuid',\n        description: 'Unique identifier of a policy.'\n      }\n    },\n    separate_access_rfids: {\n      type: 'array',\n      description: 'Array of RFID IDs for separate access associated with the role.',\n      items: {\n        type: 'string',\n        format: 'uuid',\n        description: 'Unique identifier of an RFID.'\n      }\n    }\n  }\n};\nconst createRoleResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Details of the created role.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the created role.'\n        },\n        label: {\n          type: 'string',\n          description: 'Label of the created role.'\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the role\\'s last update.'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the role\\'s creation.'\n        }\n      }\n    }\n  }\n};\nconst getRoleResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'object',\n      description: 'Details of the retrieved role.',\n      properties: {\n        id: {\n          type: 'string',\n          format: 'uuid',\n          description: 'Unique identifier of the role.'\n        },\n        label: {\n          type: 'string',\n          description: 'Label of the role.'\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the role\\'s creation.'\n        },\n        updatedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the role\\'s last update.'\n        },\n        deletedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'Timestamp of the role\\'s deletion (null if not deleted).'\n        },\n        policies: {\n          type: 'array',\n          description: 'List of policies associated with the role.',\n          items: {\n            type: 'object',\n            properties: {\n              id: {\n                type: 'string',\n                format: 'uuid',\n                description: 'Unique identifier of the policy.'\n              },\n              label: {\n                type: 'string',\n                description: 'Label of the policy.'\n              },\n              createdAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the policy\\'s creation.'\n              },\n              updatedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the policy\\'s last update.'\n              },\n              deletedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the policy\\'s deletion (null if not deleted).'\n              },\n              rfids: {\n                type: 'array',\n                description: 'List of rfids associated with the policy.',\n                items: {\n                  type: 'object',\n                  properties: {\n                    id: {\n                      type: 'string',\n                      format: 'uuid',\n                      description: 'Unique identifier of the RFID.'\n                    },\n                    ipAddress: {\n                      type: 'string',\n                      description: 'IP address of the RFID.'\n                    },\n                    label: {\n                      type: 'string',\n                      description: 'Label of the RFID.'\n                    },\n                    mode: {\n                      type: 'string',\n                      description: 'Mode of the RFID.'\n                    },\n                    direction: {\n                      type: 'string',\n                      description: 'Direction of the RFID.'\n                    },\n                    attendance: {\n                      type: 'boolean',\n                      description: 'Attendance status of the RFID.'\n                    },\n                    duration: {\n                      type: 'number',\n                      description: 'Duration of the RFID.'\n                    },\n                    createdAt: {\n                      type: 'string',\n                      format: 'date-time',\n                      description: 'Timestamp of the RFID\\'s creation.'\n                    },\n                    updatedAt: {\n                      type: 'string',\n                      format: 'date-time',\n                      description: 'Timestamp of the RFID\\'s last update.'\n                    },\n                    deletedAt: {\n                      type: 'string',\n                      format: 'date-time',\n                      description: 'Timestamp of the RFID\\'s deletion (null if not deleted).'\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        separate_access_rfids: {\n          type: 'array',\n          description: 'List of separate access rfids associated with the role.',\n          items: {\n            type: 'object',\n            properties: {\n              id: {\n                type: 'string',\n                format: 'uuid',\n                description: 'Unique identifier of the RFID.'\n              },\n              ipAddress: {\n                type: 'string',\n                description: 'IP address of the RFID.'\n              },\n              label: {\n                type: 'string',\n                description: 'Label of the RFID.'\n              },\n              mode: {\n                type: 'string',\n                description: 'Mode of the RFID.'\n              },\n              direction: {\n                type: 'string',\n                description: 'Direction of the RFID.'\n              },\n              attendance: {\n                type: 'boolean',\n                description: 'Attendance status of the RFID.'\n              },\n              duration: {\n                type: 'number',\n                description: 'Duration of the RFID.'\n              },\n              createdAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the RFID\\'s creation.'\n              },\n              updatedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the RFID\\'s last update.'\n              },\n              deletedAt: {\n                type: 'string',\n                format: 'date-time',\n                description: 'Timestamp of the RFID\\'s deletion (null if not deleted).'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nconst getRolesResponseSchema = {\n  type: 'object',\n  properties: {\n    status: {\n      type: 'boolean',\n      description: 'Indicates success or failure of the operation.'\n    },\n    message: {\n      type: 'string',\n      description: 'Message describing the outcome.'\n    },\n    data: {\n      type: 'array',\n      description: 'List of roles retrieved.',\n      items: {\n        type: 'object',\n        description: 'Details of the retrieved role.',\n        properties: {\n          id: {\n            type: 'string',\n            format: 'uuid',\n            description: 'Unique identifier of the role.'\n          },\n          label: {\n            type: 'string',\n            description: 'Label of the role.'\n          },\n          createdAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the role\\'s creation.'\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the role\\'s last update.'\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'date-time',\n            description: 'Timestamp of the role\\'s deletion (null if not deleted).'\n          },\n          policies: {\n            type: 'array',\n            description: 'List of policies associated with the role.',\n            items: {\n              type: 'object',\n              properties: {\n                id: {\n                  type: 'string',\n                  format: 'uuid',\n                  description: 'Unique identifier of the policy.'\n                },\n                label: {\n                  type: 'string',\n                  description: 'label of the policy.'\n                },\n                createdAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'Timestamp of the policy\\'s creation.'\n                },\n                updatedAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'Timestamp of the policy\\'s last update.'\n                },\n                deletedAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'Timestamp of the policy\\'s deletion (null if not deleted).'\n                },\n                rfids: {\n                  type: 'array',\n                  description: 'List of rfids associated with the policy.',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      id: {\n                        type: 'string',\n                        format: 'uuid',\n                        description: 'Unique identifier of the RFID.'\n                      },\n                      ipAddress: {\n                        type: 'string',\n                        description: 'IP address of the RFID.'\n                      },\n                      label: {\n                        type: 'string',\n                        description: 'Label of the RFID.'\n                      },\n                      mode: {\n                        type: 'string',\n                        description: 'Mode of the RFID.'\n                      },\n                      direction: {\n                        type: 'string',\n                        description: 'Direction of the RFID.'\n                      },\n                      attendance: {\n                        type: 'boolean',\n                        description: 'Attendance status of the RFID.'\n                      },\n                      duration: {\n                        type: 'number',\n                        description: 'Duration of the RFID.'\n                      },\n                      createdAt: {\n                        type: 'string',\n                        format: 'date-time',\n                        description: 'Timestamp of the RFID\\'s creation.'\n                      },\n                      updatedAt: {\n                        type: 'string',\n                        format: 'date-time',\n                        description: 'Timestamp of the RFID\\'s last update.'\n                      },\n                      deletedAt: {\n                        type: 'string',\n                        format: 'date-time',\n                        description: 'Timestamp of the RFID\\'s deletion (null if not deleted).'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          separate_access_rfids: {\n            type: 'array',\n            description: 'List of separate access rfids associated with the role.',\n            items: {\n              type: 'object',\n              properties: {\n                id: {\n                  type: 'string',\n                  format: 'uuid',\n                  description: 'Unique identifier of the RFID.'\n                },\n                ipAddress: {\n                  type: 'string',\n                  description: 'IP address of the RFID.'\n                },\n                label: {\n                  type: 'string',\n                  description: 'Label of the RFID.'\n                },\n                mode: {\n                  type: 'string',\n                  description: 'Mode of the RFID.'\n                },\n                direction: {\n                  type: 'string',\n                  description: 'Direction of the RFID.'\n                },\n                attendance: {\n                  type: 'boolean',\n                  description: 'Attendance status of the RFID.'\n                },\n                duration: {\n                  type: 'number',\n                  description: 'Duration of the RFID.'\n                },\n                createdAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'Timestamp of the RFID\\'s creation.'\n                },\n                updatedAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'Timestamp of the RFID\\'s last update.'\n                },\n                deletedAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'Timestamp of the RFID\\'s deletion (null if not deleted).'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    pagination: {\n      type: 'object',\n      description: 'Pagination information for the response.',\n      properties: {\n        current_page: {\n          type: 'integer',\n          description: 'The current page number in the paginated response.'\n        },\n        total_pages: {\n          type: 'integer',\n          description: 'The total number of pages available in the dataset.'\n        },\n        next_page: {\n          type: 'integer',\n          description: 'The URL or page number for the next page (if available).',\n          nullable: true // Optional property (can be null)\n        },\n        previous_page: {\n          type: 'integer',\n          description: 'The URL or page number for the previous page (if available).',\n          nullable: true // Optional property (can be null)\n        }\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack://kronos/./src/utils/swaggerSchemas.js?");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("bcryptjs");

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("cors");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("dotenv");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("express");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("jsonwebtoken");

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("lodash");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "sequelize":
/*!****************************!*\
  !*** external "sequelize" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("sequelize");

/***/ }),

/***/ "socket.io":
/*!****************************!*\
  !*** external "socket.io" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("socket.io");

/***/ }),

/***/ "swagger-jsdoc":
/*!********************************!*\
  !*** external "swagger-jsdoc" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("swagger-jsdoc");

/***/ }),

/***/ "swagger-ui-express":
/*!*************************************!*\
  !*** external "swagger-ui-express" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("swagger-ui-express");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("uuid");

/***/ }),

/***/ "yup":
/*!**********************!*\
  !*** external "yup" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("yup");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;